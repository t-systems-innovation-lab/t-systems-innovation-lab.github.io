var u=Object.defineProperty;var t=(e,a)=>u(e,"name",{value:a,configurable:!0});function b(e){const a=e.breakpointValues;if(!l(a)){const r=s(a),n=p(r);return Object.entries(n).map(([i,o])=>`--${e.propName}-${i}:${o}`).join(";")+";"}}t(b,"createCssString");function l(e){let a=!0;for(const r of e)if(r.value){a=!1;break}return a}t(l,"isBreakpointValuesEmpty");function s(e){const a=[...e];for(let r=1;r<a.length;r++)a[r].value||(a[r].value=a[r-1].value);return a}t(s,"fillEmptyBreakpointValues");function p(e){return e.reduce((a,r)=>Object.assign(Object.assign({},a),{[r.breakpointName]:r.value}),{})}t(p,"transformBreakpointValuesData");function c(e){return[{breakpointName:"sm",value:e[0]},{breakpointName:"md",value:e[1]},{breakpointName:"lg",value:e[2]},{breakpointName:"xl",value:e[3]},{breakpointName:"xxl",value:e[4]}]}t(c,"propsToBreakpointValuesArray");function m(e,a){if(!(!e||!a))return{propName:e,breakpointValues:c(a.split(","))}}t(m,"createBreakpointValuedProp");export{b as a,m as c};
//# sourceMappingURL=valuesTransformation-ce891c3a.a65ed4aa.js.map
