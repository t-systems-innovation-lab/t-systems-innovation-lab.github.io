{"version":3,"file":"scale-accordion.entry.574f0326.js","sources":["../../node_modules/@telekom/scale-components/dist/esm/scale-accordion.entry.js"],"sourcesContent":["import { r as registerInstance, h, a as Host, g as getElement } from './index-3408babe.js';\nimport { c as classnames } from './index-713f92a5.js';\n\nconst Accordion = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** If `true`, only one scale-collapsible within the accordion can be open at a time */\n    this.dependent = false;\n    /** If `true`, scale-collapsibles within the accordion will all be open initially, unless this is dependant */\n    this.expanded = false;\n    /** Heading level for scale-collapsible descendants */\n    this.headingLevel = null;\n    this.iconLocation = 'left';\n  }\n  /**\n   * Handle `dependent`\n   */\n  collapsibleHandler(event) {\n    event.stopPropagation();\n    const { expanded } = event.detail;\n    if (!this.dependent || expanded === false) {\n      return;\n    }\n    this.getCollapsibleChildren().forEach((child) => {\n      if (child !== event.target && child.hasAttribute('expanded')) {\n        child.expanded = false;\n      }\n    });\n  }\n  headingLevelChanged(newValue) {\n    this.propagatePropsToChildren(newValue, this.iconLocation);\n  }\n  iconLocationChanged(newValue) {\n    this.propagatePropsToChildren(this.headingLevel, newValue);\n  }\n  connectedCallback() {\n    /**\n     * Handle `expanded`\n     */\n    if (!this.dependent) {\n      this.getCollapsibleChildren().forEach((child) => {\n        child.expanded = this.expanded;\n      });\n    }\n  }\n  componentDidLoad() {\n    if (this.headingLevel !== null || this.iconLocation !== 'left') {\n      this.propagatePropsToChildren(this.headingLevel, this.iconLocation);\n    }\n  }\n  getCollapsibleChildren() {\n    return Array.from(this.el.children).filter((el) => el.tagName === 'SCALE-COLLAPSIBLE');\n  }\n  propagatePropsToChildren(headingLevel, iconLocation) {\n    this.getCollapsibleChildren().forEach((item) => {\n      item.headingLevel = headingLevel;\n      item.iconLocation = iconLocation;\n    });\n  }\n  render() {\n    return (h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"div\", { class: this.getCssClassMap(), part: \"base\" }, h(\"slot\", null))));\n  }\n  getCssClassMap() {\n    return classnames('accordion');\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"headingLevel\": [\"headingLevelChanged\"],\n    \"iconLocation\": [\"iconLocationChanged\"]\n  }; }\n};\n\nexport { Accordion as scale_accordion };\n"],"names":["Accordion","__name","hostRef","registerInstance","event","expanded","child","newValue","el","headingLevel","iconLocation","item","h","Host","classnames","getElement"],"mappings":"2WAGK,MAACA,EAAYC,EAAA,KAAM,CACtB,YAAYC,EAAS,CACnBC,EAAiB,KAAMD,CAAO,EAE9B,KAAK,UAAY,GAEjB,KAAK,SAAW,GAEhB,KAAK,aAAe,KACpB,KAAK,aAAe,MACrB,CAID,mBAAmBE,EAAO,CACxBA,EAAM,gBAAe,EACrB,KAAM,CAAE,SAAAC,CAAQ,EAAKD,EAAM,OACvB,CAAC,KAAK,WAAaC,IAAa,IAGpC,KAAK,uBAAsB,EAAG,QAASC,GAAU,CAC3CA,IAAUF,EAAM,QAAUE,EAAM,aAAa,UAAU,IACzDA,EAAM,SAAW,GAEzB,CAAK,CACF,CACD,oBAAoBC,EAAU,CAC5B,KAAK,yBAAyBA,EAAU,KAAK,YAAY,CAC1D,CACD,oBAAoBA,EAAU,CAC5B,KAAK,yBAAyB,KAAK,aAAcA,CAAQ,CAC1D,CACD,mBAAoB,CAIb,KAAK,WACR,KAAK,uBAAsB,EAAG,QAASD,GAAU,CAC/CA,EAAM,SAAW,KAAK,QAC9B,CAAO,CAEJ,CACD,kBAAmB,EACb,KAAK,eAAiB,MAAQ,KAAK,eAAiB,SACtD,KAAK,yBAAyB,KAAK,aAAc,KAAK,YAAY,CAErE,CACD,wBAAyB,CACvB,OAAO,MAAM,KAAK,KAAK,GAAG,QAAQ,EAAE,OAAQE,GAAOA,EAAG,UAAY,mBAAmB,CACtF,CACD,yBAAyBC,EAAcC,EAAc,CACnD,KAAK,uBAAsB,EAAG,QAASC,GAAS,CAC9CA,EAAK,aAAeF,EACpBE,EAAK,aAAeD,CAC1B,CAAK,CACF,CACD,QAAS,CACP,OAAQE,EAAEC,EAAM,KAAM,KAAK,QAAUD,EAAE,QAAS,KAAM,KAAK,MAAM,EAAGA,EAAE,MAAO,CAAE,MAAO,KAAK,eAAgB,EAAE,KAAM,MAAQ,EAAEA,EAAE,OAAQ,IAAI,CAAC,CAAC,CAC9I,CACD,gBAAiB,CACf,OAAOE,EAAW,WAAW,CAC9B,CACD,IAAI,IAAK,CAAE,OAAOC,EAAW,IAAI,CAAI,CACrC,WAAW,UAAW,CAAE,MAAO,CAC7B,aAAgB,CAAC,qBAAqB,EACtC,aAAgB,CAAC,qBAAqB,CAC1C,CAAM,CACN,EAnEkB"}