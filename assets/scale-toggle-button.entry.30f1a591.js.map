{"version":3,"file":"scale-toggle-button.entry.30f1a591.js","sources":["../../node_modules/@telekom/scale-components/dist/esm/scale-toggle-button.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-3408babe.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { e as emitEvent } from './utils-004d7b05.js';\nimport { s as statusNote } from './status-note-0089e9c9.js';\n\nconst toggleButtonCss = \":host{--width:auto;--spacing-x:var(--telekom-spacing-unit-x6);--spacing-x-icon-only:var(--telekom-spacing-unit-x2);--min-height:var(--telekom-spacing-unit-x6);--height-xs:var(--telekom-spacing-unit-x6);--height-small:var(--telekom-spacing-unit-x8);--height-regular:var(--telekom-spacing-unit-x10);--height-large:var(--telekom-spacing-unit-x12);--radius:var(--telekom-radius-small);--transition:all var(--telekom-motion-duration-transition)\\n      var(--telekom-motion-easing-standard),\\n    border-radius var(--telekom-motion-duration-instant);--box-shadow-focus:inset 0 0 0 var(--telekom-line-weight-highlight)\\n    var(--telekom-color-functional-focus);--font-weight:var(--telekom-typography-font-weight-bold);--font-size-large:var(--telekom-typography-font-size-body);--font-size-small:var(--telekom-typography-font-size-caption);--font-size-xs:var(--telekom-typography-font-size-small);--line-height:var(--telekom-spacing-unit-x2);--spacing-icon-x:var(--telekom-spacing-unit-x2);--vertical-align:middle;--border-color:var(--telekom-color-ui-border-standard);--border-color-disabled:var(--telekom-color-ui-border-disabled);--color-disabled:var(--telekom-color-text-and-icon-disabled);--font-size-small:var(--telekom-typography-font-size-small);--line-height-small:var(--telekom-typography-line-spacing-standard);--min-height-small:var(--telekom-spacing-unit-x8);--radius-primary:var(--radius);--background-primary:var(--telekom-color-ui-subtle);--background-primary-disabled:var(--telekom-color-ui-disabled);--color-primary:var(--telekom-color-ui-extra-strong);--color-primary-hover:var(--telekom-color-primary-hovered);--color-primary-active:var(--telekom-color-primary-pressed);--background-secondary:transparent;--color-secondary:var(--telekom-color-text-and-icon-standard);--background-secondary-hover:var(--telekom-color-ui-state-fill-hovered);--background-secondary-active:var(--telekom-color-ui-state-fill-pressed);--background-secondary-disabled:none;--border-secondary:var(--telekom-color-ui-border-standard);--border-secondary-hover:var(--telekom-color-ui-border-hovered);--border-secondary-active:var(--telekom-color-ui-border-pressed);--border-secondary-focus:var(--telekom-color-functional-focus);--color-selected:var(--telekom-color-text-and-icon-white-standard);--background-selected-light:var(--telekom-color-primary-standard);--background-selected-hover-light:var(--telekom-color-primary-hovered);--background-selected-active-light:var(--telekom-color-primary-pressed);--background-selected-dark:var(--telekom-color-ui-extra-strong);--background-selected-hover-dark:var(--telekom-color-ui-strong);--background-selected-active-dark:var(--telekom-color-ui-strong);--color-high-contrast:var(--telekom-color-text-and-icon-white-standard)}.toggle-button{box-sizing:border-box;display:inline-flex;align-items:center;position:relative;border:0;outline:none;cursor:pointer;user-select:none;font-family:inherit;word-spacing:inherit;letter-spacing:inherit;justify-content:center;text-decoration:none;font-weight:var(--font-weight);font-size:var(--font-size);line-height:var(--line-height);min-height:var(--min-height);width:var(--width);padding-left:var(--spacing-x);padding-right:var(--spacing-x);vertical-align:var(--vertical-align);transition:var(--transition);margin:0;color:var(--color-primary)}.toggle-button--primary{background:var(--background-primary)}.toggle-button--secondary{color:var(--color-secondary);background:var(--background-secondary)}.toggle-button--icon-before ::slotted(*){margin-right:var(--spacing-icon-x);pointer-events:none}.toggle-button--icon-after ::slotted(*){margin-left:var(--spacing-icon-x);pointer-events:none}.toggle-button--icon-only ::slotted(*){pointer-events:none}.toggle-button--xs{height:var(--height-xs);font-size:var(--font-size-xs)}.toggle-button--small{height:var(--height-small);font-size:var(--font-size-small)}.toggle-button--regular{height:var(--height-regular);font-size:var(--font-size-large)}.toggle-button--large{height:var(--height-large);font-size:var(--font-size-large)}.toggle-button:not(.button--disabled):focus{box-shadow:var(--box-shadow-focus)}.toggle-button:not(.button--disabled):hover{color:var(--color-secondary-hover);background-color:var(--background-secondary-hover)}.toggle-button:not(.button--disabled):active{color:var(--color-secondary-active);background-color:var(--background-secondary-active)}.toggle-button:disabled{color:var(--color-disabled);pointer-events:none;border:1px solid var(--border-color-disabled)}.toggle-button:disabled.toggle-button--primary{background:var(--background-primary-disabled)}.toggle-button--selected.toggle-button--color{color:var(--color-selected);background:var(--background-selected-light)}.toggle-button--selected:not(.button--disabled).toggle-button--color:hover{color:var(--color-selected);background:var(--background-selected-hover-light)}.toggle-button--selected:not(.button--disabled).toggle-button--color:active{color:var(--color-selected);background:var(--background-selected-active-light)}.toggle-button--selected.toggle-button--monochrome{color:var(--telekom-color-text-and-icon-inverted-standard);background:var(--background-selected-dark)}.toggle-button--selected:not(.button--disabled).toggle-button--monochrome:hover{color:var(--color-selected);background:var(--background-selected-hover-dark)}.toggle-button--selected:not(.button--disabled).toggle-button--monochrome:active{color:var(--color-selected);background:var(--background-selected-active-dark)}.toggle-button--border{border:1px solid var(--border-color)}.toggle-button--left,.toggle-button--left:disabled{border-right:0;border-radius:var(--radius-primary) 0 0 var(--radius-primary)}.toggle-button--right,.toggle-button--right:disabled{border-left:0;border-radius:0 var(--radius-primary) var(--radius-primary) 0}.toggle-button--both,.toggle-button--both:disabled{border-radius:var(--radius-primary)}.toggle-button--all,.toggle-button--all:disabled{border-radius:var(--radius-primary)}.toggle-button--neither,.toggle-button--neither:disabled{border-right:0;border-left:0;border-radius:0}@media screen and (forced-colors: active), (-ms-high-contrast: active){.toggle-button{color:var(--color-high-contrast)}}\";\n\nvar iconSizes;\n(function (iconSizes) {\n  iconSizes[\"xs\"] = \"12\";\n  iconSizes[\"small\"] = \"16\";\n  iconSizes[\"regular\"] = \"22\";\n  iconSizes[\"large\"] = \"24\";\n})(iconSizes || (iconSizes = {}));\nlet i = 0;\nconst ToggleButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scaleClick = createEvent(this, \"scale-click\", 7);\n    this.scaleClickLegacy = createEvent(this, \"scaleClick\", 7);\n    /** (optional) The size of the button */\n    this.size = 'regular';\n    /** (optional) Button background */\n    this.background = 'white';\n    /** @deprecated - variant should replace colorScheme */\n    this.colorScheme = 'color';\n    /** (optional) background variant of a selected toggle-button */\n    this.variant = 'color';\n    /** (optional) If `true`, the button is disabled */\n    this.disabled = false;\n    /** (optional) If `true`, the button is selected */\n    this.selected = false;\n    /** (optional) Button type */\n    this.iconOnly = false;\n    /** (optional) Icon position related to the label */\n    this.iconPosition = 'before';\n    /** (optional) set the border-radius left, right or both */\n    this.radius = null;\n    /** (optional) translation of 'selected */\n    this.ariaLangSelected = 'selected';\n    /** (optional) translation of 'deselected */\n    this.ariaLangDeselected = 'deselected';\n    /** a11y text for getting meaningful value. `$buttonNumber` and `$selected` are template variables and will be replaces by their corresponding properties.  */\n    this.ariaDescriptionTranslation = '$selected';\n    this.hasScaleIcon = false;\n    this.handleClick = (event) => {\n      event.preventDefault();\n      this.selected = !this.selected;\n      this.handleIconShape();\n      this.scaleClick.emit({ id: this.toggleButtonId, selected: this.selected });\n      emitEvent(this, 'scaleClick', {\n        id: this.toggleButtonId,\n        selected: this.selected,\n      });\n    };\n    this.handleIconShape = () => {\n      if (this.hasScaleIcon) {\n        Array.from(this.hostElement.children).forEach((node) => {\n          if (node.nodeName.substr(0, 10) === 'SCALE-ICON') {\n            if (this.selected) {\n              node.setAttribute('selected', 'true');\n            }\n            else {\n              node.removeAttribute('selected');\n            }\n          }\n        });\n      }\n    };\n  }\n  async setFocus() {\n    this.focusableElement.focus();\n  }\n  connectedCallback() {\n    this.setIconPositionProp();\n    this.handleIconShape();\n  }\n  componentDidLoad() {\n    this.handleIconSize();\n  }\n  componentDidRender() {\n    this.handleIconSize();\n    if (this.hostElement.hasAttribute('aria-label')) {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"ariaLabel\" is deprecated. Please use the \"ariaLabelToggleButton\" property!',\n        type: 'warn',\n        source: this.hostElement,\n      });\n    }\n  }\n  componentWillLoad() {\n    if (this.toggleButtonId == null) {\n      this.toggleButtonId = 'toggle-button-' + i++;\n    }\n  }\n  getAriaDescriptionTranslation() {\n    const replaceSelected = this.selected\n      ? this.ariaLangSelected\n      : this.ariaLangDeselected;\n    const filledText = this.ariaDescriptionTranslation\n      .replace(/\\$position/g, `${this.position}`)\n      .replace(/\\$selected/g, `${replaceSelected}`);\n    return filledText;\n  }\n  handleIconSize() {\n    Array.from(this.hostElement.children).forEach((child) => {\n      if (child.tagName.substr(0, 10) === 'SCALE-ICON') {\n        child.setAttribute('size', iconSizes[this.size]);\n      }\n    });\n  }\n  /**\n   * Detect whether a child node is a scale icon and contains text.\n   * If so, we set `iconPosition` to `after`, if the icon comes after the text.\n   */\n  setIconPositionProp() {\n    const nodes = Array.from(this.hostElement.childNodes).filter((node) => {\n      if (node.nodeName.substr(0, 10) === 'SCALE-ICON') {\n        this.hasScaleIcon = true;\n      }\n      // ignore empty text nodes, which are probably due to formatting\n      return !(node.nodeType === 3 && node.nodeValue.trim() === '');\n    });\n    if (!this.iconOnly &&\n      nodes &&\n      nodes.length &&\n      nodes[nodes.length - 1] &&\n      nodes[nodes.length - 1].nodeName.substr(0, 10) === 'SCALE-ICON') {\n      this.iconPosition = 'after';\n    }\n  }\n  render() {\n    return (h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"button\", { ref: (el) => (this.focusableElement = el), class: this.getCssClassMap(), id: this.toggleButtonId, onClick: this.handleClick, disabled: this.disabled, type: \"button\", \"aria-label\": this.ariaLabelToggleButton, \"aria-pressed\": this.selected, part: this.getBasePartMap(), \"aria-description\": this.getAriaDescriptionTranslation() }, h(\"slot\", null))));\n  }\n  getBasePartMap() {\n    return this.getCssOrBasePartMap('basePart');\n  }\n  getCssClassMap() {\n    return this.getCssOrBasePartMap('css');\n  }\n  getCssOrBasePartMap(mode) {\n    const prefix = mode === 'basePart' ? '' : 'toggle-button--';\n    return classnames('toggle-button', this.size && `${prefix}${this.size}`, this.background &&\n      `${prefix}${this.background === 'grey' ? 'primary' : 'secondary'}`, !this.iconOnly &&\n      this.iconPosition &&\n      `toggle-button--icon-${this.iconPosition}`, this.iconOnly && `${prefix}icon-only`, !this.disabled && this.selected && `${prefix}selected`, this.radius && `${prefix}${this.radius}`, this.colorScheme && `${prefix}${this.colorScheme}`, this.variant && `${prefix}${this.variant}`, !this.hideBorder && `${prefix}border`);\n  }\n  get hostElement() { return getElement(this); }\n};\nToggleButton.style = toggleButtonCss;\n\nexport { ToggleButton as scale_toggle_button };\n"],"names":["toggleButtonCss","iconSizes","i","ToggleButton","__name","hostRef","registerInstance","createEvent","event","emitEvent","node","statusNote","replaceSelected","child","nodes","h","Host","el","mode","prefix","classnames","getElement"],"mappings":"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"}