{"version":3,"file":"scale-checkbox_2.entry.ff247bcd.js","sources":["../../node_modules/@telekom/scale-components/dist/esm/scale-checkbox_2.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-3408babe.js';\nimport { e as emitEvent } from './utils-004d7b05.js';\nimport { s as statusNote } from './status-note-0089e9c9.js';\n\nconst checkboxCss = \":host,scale-checkbox{--spacing-x:var(--telekom-spacing-unit-x2);--transition:all var(--telekom-motion-duration-transition)\\n    var(--telekom-motion-easing-standard);--color-text:var(--telekom-color-text-and-icon-standard);--color-error:var(--telekom-color-functional-danger-standard);--color-disabled:var(--telekom-color-text-and-icon-disabled);--color-standard:var(--telekom-color-background-surface);--background-disabled:none;--color-primary:var(--telekom-color-primary-standard);--color-focus:var(--telekom-color-functional-focus);--color-primary-hover:var(--telekom-color-text-and-icon-standard);--color-primary-active:var(--telekom-color-text-and-icon-standard);--width-control:var(--telekom-spacing-unit-x4);--height-control:var(--telekom-spacing-unit-x4);--transition-control:var(--transition);--spacing-control:var(--telekom-spacing-unit-x05);--spacing-left-control:var(--telekom-spacing-unit-x1);--radius-control:var(--telekom-radius-small);--border-width-control:var(--telekom-spacing-unit-x025);--transition-helper-text:var(--transition);--spacing-left-helper-text:calc(var(--width-control) + var(--spacing-x));--font-size-helper-text:var(--telekom-typography-font-size-small);--font-weight-helper-text:var(--telekom-typography-font-weight-bold);--line-height-helper-text:var(--telekom-typography-line-spacing-standard);--color-helper-text:var(\\n    --telekom-color-text-and-icon-functional-informational\\n  );--font-weight-label:var(--telekom-typography-font-weight-medium);--transition-label:var(--transition);--color-icon-checked-disabled:var(--telekom-color-text-and-icon-disabled);--color-icon-checked-active:var(\\n    --telekom-color-text-and-icon-white-standard\\n  );--width-icon:var(--telekom-spacing-unit-x3);--height-icon:var(--telekom-spacing-unit-x3);--stroke-width:var(--stroke-width-checkbox, 0.5px)}scale-checkbox{position:relative;display:flex;width:fit-content;padding:0 2px 0 2px;flex-direction:column;color:var(--color-text)}scale-checkbox [part='icon'],scale-checkbox [part='checkbox'],scale-checkbox [part='label'],scale-checkbox [part='helper-text']{transition:var(--transition)}scale-checkbox [part='input'],scale-checkbox.hideLabel [part='label']{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}scale-checkbox [part='checkbox']{display:flex;flex:0 0 auto;justify-content:center;align-items:center;margin:var(--spacing-control) 0;width:var(--width-control);height:var(--height-control);border-radius:var(--radius-control);border:var(--border-width-control) solid\\n    var(--telekom-color-ui-border-standard)}scale-checkbox [part='label']{font-weight:var(--font-weight-label);margin-left:var(--spacing-x)}scale-checkbox [part='icon']{width:var(--width-icon);height:var(--height-icon);color:var(--color-icon-checked-active)}scale-checkbox [part='icon'] svg{width:100%;height:100%}scale-checkbox [part='icon'] svg rect,scale-checkbox [part='icon'] svg path{stroke:currentColor;stroke-width:var(--stroke-width)}scale-checkbox [part='container']{align-items:center;display:flex}scale-checkbox [part='helper-text']{font-size:var(--font-size-helper-text);font-weight:var(--font-weight-helper-text);color:var(--color-helper-text);padding-left:calc(\\n    var(--width-control) + var(--spacing-x) + var(--border-width-control) * 2\\n  )}scale-checkbox.indeterminate [part='checkbox']{background:var(--telekom-color-ui-state-fill-standard);border-color:var(--telekom-color-ui-border-standard);color:var(--color-icon-checked-active)}scale-checkbox.indeterminate [part='icon']{color:var(--color-icon-checked-active)}scale-checkbox.checked [part='checkbox']{background:var(--telekom-color-primary-standard);border-color:var(--telekom-color-primary-standard);color:var(--color-icon-checked-active)}scale-checkbox [part='container']:hover [part='checkbox']{background:var(--telekom-color-ui-state-fill-hovered);border-color:var(--telekom-color-ui-border-hovered);color:var(--color-icon-checked-active)}scale-checkbox.checked [part='container']:hover [part='checkbox']{background:var(--telekom-color-primary-hovered);border-color:var(--telekom-color-ui-border-hovered);color:var(--color-icon-checked-active)}scale-checkbox [part='container']:active [part='checkbox']{background:var(--telekom-color-ui-state-fill-pressed);border-color:var(--telekom-color-ui-border-pressed);color:var(--color-icon-checked-active)}scale-checkbox [part='input']:focus~[part='container'] [part='checkbox']{box-shadow:0 0 0 var(--telekom-spacing-unit-x05) var(--color-focus)}scale-checkbox [part='container']:hover{color:var(--color-primary-hover);cursor:pointer}scale-checkbox.checked [part='container']:hover [part='checkbox'],scale-checkbox.indeterminate [part='container']:hover [part='checkbox']{background:var(--telekom-color-primary-hovered);border-color:var(--telekom-color-primary-hovered)}scale-checkbox.checked [part='input']:active~[part='container'],scale-checkbox.checked [part='container']:active{color:var(--color-primary-active)}scale-checkbox [part='input']:active~[part='container'] [part='checkbox'],scale-checkbox.checked [part='container']:active [part='checkbox'],scale-checkbox.indeterminate [part='container']:active [part='checkbox']{background:var(--telekom-color-primary-pressed);border-color:var(--telekom-color-primary-pressed)}scale-checkbox:not(.checked) [part='container']:active [part='checkbox']{background:var(--telekom-color-ui-state-fill-pressed);border-color:var(--telekom-color-ui-border-pressed)}scale-checkbox.error [part='helper-text']{color:var(--telekom-color-text-and-icon-functional-danger)}scale-checkbox.error [part='checkbox']{border:2px solid var(--color-error)}scale-checkbox.error [part='input']:focus~[part='container'] [part='checkbox']{box-shadow:0 0 0 var(--telekom-spacing-unit-x05) var(--color-focus);border:2px solid var(--telekom-color-functional-danger-hovered)}scale-checkbox.error:hover [part='checkbox']{background-color:var(--telekom-color-ui-state-fill-hovered);border:2px solid var(--telekom-color-functional-danger-hovered)}scale-checkbox.error:active [part='checkbox']{background-color:var(--telekom-color-ui-state-fill-pressed);border:2px solid var(--telekom-color-functional-danger-pressed)}scale-checkbox.error:not(.checked) [part='container']:active [part='checkbox']{background:var(--telekom-color-ui-state-fill-pressed);border:2px solid var(--telekom-color-functional-danger-pressed)}scale-checkbox.checked.error [part='container']:hover [part='checkbox']{border:2px solid var(--telekom-color-functional-danger-hovered)}scale-checkbox.disabled{cursor:not-allowed}scale-checkbox.disabled [part='container'],scale-checkbox.disabled [part='helper-text']{color:var(--color-disabled);pointer-events:none}scale-checkbox.disabled [part='checkbox']{background:var(--telekom-color-ui-solid-fill-disabled);border-color:var(--telekom-color-ui-border-disabled)}scale-checkbox.checked.disabled [part='checkbox']{background-color:var(--telekom-color-ui-disabled);border-color:transparent}scale-checkbox.checked.disabled [part='icon']{color:var(--color-icon-checked-disabled);background-color:var(--telekom-color-ui-disabled)}\";\n\nlet i = 0;\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scaleChange = createEvent(this, \"scale-change\", 7);\n    this.scaleChangeLegacy = createEvent(this, \"scaleChange\", 7);\n    /** (optional) Input label */\n    this.label = '';\n    /** (optional) Hides the specified label visually */\n    this.hideLabel = false;\n    /** @deprecated - invalid should replace status */\n    this.status = '';\n    /** (optional) Input status */\n    this.invalid = false;\n    /** (optional) Input disabled */\n    this.disabled = false;\n    /** (optional) Active switch */\n    this.checked = false;\n    /** (optional) indeterminate */\n    this.indeterminate = false;\n    /** (optional) Input value */\n    this.value = '';\n    this.internalId = i++;\n    this.handleChange = (ev) => {\n      if (this.indeterminate) {\n        this.indeterminate = false;\n        this.checked = true;\n        ev.target.checked = true;\n      }\n      else {\n        this.checked = ev.target.checked;\n      }\n      const { checked, indeterminate, value, disabled } = this;\n      emitEvent(this, 'scaleChange', { checked, indeterminate, value, disabled });\n    };\n  }\n  componentDidRender() {\n    if (this.status !== '') {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"status\" is deprecated. Please use the \"invalid\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n    if (this.host.hasAttribute('aria-label')) {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"ariaLabel\" is deprecated. Please use the \"ariaLabelCheckbox\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n  }\n  connectedCallback() {\n    if (!this.inputId) {\n      this.inputId = 'input-checkbox-' + this.internalId;\n    }\n  }\n  /* Accessibility: rendering the icon *only* when checked, otherwise is always visible in HCM */\n  renderIcon() {\n    if (this.indeterminate) {\n      return (h(\"scale-icon-action-indeterminate\", { part: \"icon\", decorative: true }));\n    }\n    if (this.checked) {\n      return (h(\"scale-icon-action-success\", { part: \"icon\", decorative: true }));\n    }\n  }\n  renderHelperText(text) {\n    if (this.helperText && this.helperText !== '') {\n      return (h(\"div\", { part: \"helper-text\", id: text.id, \"aria-live\": \"polite\", \"aria-relevant\": \"additions removals\" }, text.content));\n    }\n  }\n  render() {\n    const helperText = {\n      id: this.helperText ? `helper-text-${this.internalId}` : null,\n      content: this.helperText,\n    };\n    return (h(Host, { class: {\n        checked: this.checked,\n        indeterminate: this.indeterminate,\n        disabled: this.disabled,\n        error: this.status === 'error' || this.invalid,\n        hideLabel: this.hideLabel,\n      } }, h(\"input\", { type: \"checkbox\", part: \"input\", name: this.name || null, id: this.inputId, value: this.value, checked: this.checked, indeterminate: this.indeterminate, \"aria-label\": this.ariaLabelCheckbox, \"aria-checked\": this.indeterminate ? 'mixed' : false, \"aria-invalid\": this.status === 'error' || this.invalid, \"aria-describedBy\": helperText.id, disabled: this.disabled, onChange: this.handleChange }), h(\"label\", { part: \"container\", htmlFor: this.inputId }, h(\"div\", { part: \"checkbox\" }, this.renderIcon()), h(\"div\", { part: \"label\" }, this.label || h(\"slot\", null))), this.renderHelperText(helperText)));\n  }\n  get host() { return getElement(this); }\n};\nCheckbox.style = checkboxCss;\n\nconst iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--telekom-motion-duration-transition)\\n    var(--telekom-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nconst ActionIndeterminate = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n    this.decorative = false;\n  }\n  connectedCallback() {\n    if (!this.hostElement.hasAttribute('styles')) {\n      this.hostElement.style.display = 'inline-flex';\n    }\n  }\n  render() {\n    const ariaHidden = this.decorative ? { 'aria-hidden': 'true' } : {};\n    return (h(Host, null, h(\"svg\", Object.assign({ class: \"scale-icon\", xmlns: \"http://www.w3.org/2000/svg\", width: this.size, height: this.size, viewBox: \"0 0 24 24\" }, ariaHidden), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", { fill: ((this.fill === 'currentColor') ? this.color : this.fill) }, this.selected ? (h(\"g\", null, h(\"rect\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"2\", rx: \"0.75\", \"fill-rule\": \"evenodd\", x: \"4\", y: \"11.25\" }))) : (h(\"g\", null, h(\"rect\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"2\", rx: \"0.75\", \"fill-rule\": \"evenodd\", x: \"4\", y: \"11.25\" })))))));\n  }\n  get hostElement() { return getElement(this); }\n};\nActionIndeterminate.style = iconCss;\n\nexport { Checkbox as scale_checkbox, ActionIndeterminate as scale_icon_action_indeterminate };\n"],"names":["checkboxCss","i","Checkbox","__name","hostRef","registerInstance","createEvent","ev","checked","indeterminate","value","disabled","emitEvent","statusNote","h","text","helperText","Host","getElement","iconCss","ActionIndeterminate","ariaHidden"],"mappings":"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"}