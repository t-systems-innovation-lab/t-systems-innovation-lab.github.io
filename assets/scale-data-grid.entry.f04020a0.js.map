{"version":3,"file":"scale-data-grid.entry.f04020a0.js","sources":["../../node_modules/@telekom/scale-components/dist/esm/scale-data-grid.entry.js"],"sourcesContent":["import { h, r as registerInstance, c as createEvent, a as Host, g as getElement } from './index-3408babe.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { e as emitEvent } from './utils-004d7b05.js';\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected content: boolean, eg `true`\n// Options\n// style?: string 'switch' | 'checkbox'\n// editable?: boolean = false\nconst CheckboxCell = {\n  defaults: {\n    sortBy: 'number',\n  },\n  getLongestContent({ rows, columnIndex }) {\n    // Skip check as content width is always the same\n    return rows[0][columnIndex];\n  },\n  render: ({ field, content, component, rowIndex, columnIndex }) => {\n    const { style = 'checkbox', editable = false, label } = field;\n    const props = {\n      checked: content,\n      disabled: !editable,\n      label,\n    };\n    if (editable) {\n      props.onScaleChange = (ev) => {\n        const { value } = ev.detail;\n        // Update rows data\n        component.rows[rowIndex][columnIndex] = value;\n        // Trigger event\n        component.triggerEditEvent(value, rowIndex, columnIndex);\n      };\n    }\n    switch (style) {\n      case 'switch':\n        return h(\"scale-switch\", Object.assign({}, props));\n      default:\n        // 'checkbox'\n        return h(\"scale-checkbox\", Object.assign({}, props));\n    }\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected: date/time string, eg '10:23:00'\n// TODO: see if this is even worth it. It may help with sorting/filtering?\n// work out format requirements - as date/time formatting is heavy eg moment.js\n// const { inputFormat, outputFormat } = field;\n// inputFormat: 'HH:mm:ss', // ['timestamp', '']\n// outputFormat: 'HH:mm',\nconst DateCell = {\n  defaults: {\n    sortBy: 'text',\n  },\n  render: ({ content, isAutoWidthCheck }) => {\n    let value = content;\n    // Render all digits with 8s as they're the widest\n    if (isAutoWidthCheck) {\n      value = value.replace(/[0-9]/g, '8');\n    }\n    return h(\"p\", { class: `scl-body` }, value);\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected content: an email string (eg: 'mailto:example@domain.com)\nconst EmailCell = {\n  defaults: {\n    sortBy: 'text',\n  },\n  render: ({ content }) => {\n    // Remove protocol (mailto:)\n    const emailNoProtocol = content.replace(/^mailto:/i, '');\n    return h(\"scale-link\", { href: content }, emailNoProtocol);\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected content: number, eg 10230.32\n// Options\n// style?: string 'bar' | 'progress'\n// min?: number 0\n// max?: number 100\nconst GraphCell = {\n  defaults: {\n    sortBy: 'number',\n  },\n  render: ({ field, content }) => {\n    const { style = 'progress', min = 0, max = 100 } = field;\n    // Convert content to 0>100 range for progress bar\n    const progress = ((content - min) / (max - min)) * 100;\n    switch (style) {\n      case 'bar':\n        return (h(\"div\", { class: `tbody__bar-cell` },\n          h(\"scale-progress-bar\", { \"aria-hidden\": \"true\", percentage: progress, \n            // showStatus={true}\n            mute: true, style: { maxWidth: '200px' }, styles: \n            /* css */ `.progress-bar__outer {\n                min-width: 50px;\n                max-width: 200px;\n              }\n              .progress-bar__inner {\n                background: var(--telekom-color-ui-faint) !important;\n              }\n              ` }),\n          h(\"p\", { class: `scl-body` }, content)));\n      default:\n        // progress\n        return (h(\"scale-progress-bar\", { percentage: progress, showStatus: true, mute: true, styles: \n          /* css */ `.progress-bar__outer {\n              min-width: 50px;\n              max-width: 200px;\n            }\n            .progress-bar__inner {\n                background: var(--telekom-color-functional-informational-standard) !important;\n              }\n            ` }));\n    }\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected content: a url string (eg: 'https://sample.com')\nconst LinkCell = {\n  defaults: {\n    sortBy: 'text',\n  },\n  render: ({ content }) => {\n    // Remove protocol (http/https)\n    const urlNoProtocol = content.replace(/^https?\\:\\/\\//i, '');\n    return (h(\"scale-link\", { href: content, target: \"_blank\" }, urlNoProtocol));\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected content: HTMLElement\nconst HTMLCell = {\n  defaults: {},\n  getLongestContent({ rows, columnIndex }) {\n    // Skip check as content width is always the same\n    return rows[0][columnIndex];\n  },\n  render: ({ content, component }) => {\n    return (h(\"scale-button\", { variant: \"secondary\", size: \"small\", \"icon-only\": true, \"aria-label\": `Activate to ${content.isExpanded ? 'collapse' : 'expand'} content`, onClick: () => {\n        content.isExpanded = !content.isExpanded;\n        component.forceRender++;\n      } }, content.isExpanded ? (h(\"scale-icon-navigation-collapse-up\", { size: 14 })) : (h(\"scale-icon-navigation-collapse-down\", { size: 14 }))));\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected content: number or string, eg `120.0`\n// Options\n// precision\n// decimalSymbol\n// groupSymbol\n// editable?: boolean = false\nconst NumberCell = {\n  defaults: {\n    textAlign: 'right',\n    sortBy: 'number',\n  },\n  render: ({ field, content, component, rowIndex, columnIndex, isAutoWidthCheck, }) => {\n    const { precision = Infinity, decimalSymbol = '.', groupSymbol = '', prefix = '', suffix = '', editable = false, label, } = field;\n    // Input component doesn't expand with content, so need to return a fake element that simulates width\n    if (isAutoWidthCheck && editable) {\n      return (h(\"p\", { class: `scl-body`, style: { paddingRight: '26px' } }, content));\n    }\n    const step = `0.${(String(content).split('.')[1] || '')\n      .split('')\n      .map(() => '0')}`.replace(/,/g, '');\n    if (editable) {\n      const props = {\n        type: 'number',\n        size: 'small',\n        step: step.slice(0, step.length - 1) + '1',\n        value: String(content),\n        styles: /* css */ `.text-field__control {\n          text-align: right !important;\n        }`,\n        label,\n      };\n      // TODO: use blur to reduce number of changes - but doesn't pass value\n      props.onScaleChange = ({ detail }) => {\n        const { value } = detail;\n        // Update rows data\n        component.rows[rowIndex][columnIndex] = value;\n        // Trigger event\n        component.triggerEditEvent(value, rowIndex, columnIndex);\n      };\n      return h(\"scale-text-field\", Object.assign({}, props));\n    }\n    else {\n      let value = content;\n      // Render all digits with 8s as they're the widest\n      if (isAutoWidthCheck) {\n        value = Number(value.toString().replace(/[0-9]/g, '8'));\n      }\n      // Refine to requested decimal precision\n      if (precision < 100) {\n        value = Number(value).toFixed(precision);\n      }\n      else {\n        value = value.toString();\n      }\n      // Replace/add requested delimiters\n      if (groupSymbol || decimalSymbol !== '.') {\n        const parts = value.split('.');\n        if (groupSymbol) {\n          parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSymbol);\n        }\n        value = parts.join(decimalSymbol);\n      }\n      // Add prefix/suffix\n      if (prefix || suffix) {\n        value = prefix + value + suffix;\n      }\n      return (h(\"p\", { class: `scl-body`, style: { textAlign: 'right' } }, value));\n    }\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected: string\n// Options\n// options: string array\n// editable?: boolean = false\nconst SelectCell = {\n  defaults: {\n    sortBy: 'text',\n  },\n  render: ({ field, content, component, rowIndex, columnIndex, isAutoWidthCheck, }) => {\n    const { options, editable = false, label } = field;\n    // Select component doesn't expand with content, so need to return a fake element that simulates width\n    if (isAutoWidthCheck) {\n      return (h(\"p\", { class: `scl-body`, style: { paddingRight: '56px' } }, content));\n    }\n    const props = {\n      disabled: !editable,\n      value: content,\n      label,\n    };\n    if (editable) {\n      props.onScaleChange = ({ detail }) => {\n        const { value } = detail;\n        // Update rows data\n        component.rows[rowIndex][columnIndex] = value;\n        // Trigger event\n        component.triggerEditEvent(value, rowIndex, columnIndex);\n      };\n    }\n    return (h(\"scale-dropdown\", Object.assign({ size: \"small\" }, props), options.map((option) => {\n      return (h(\"option\", { value: option, selected: option === content }, option));\n    })));\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected: comma delimited string (eg 'one, two, three')\nconst TagsCell = {\n  defaults: {\n    sortBy: 'text',\n  },\n  render: ({ content }) => {\n    const tags = content.split(',').map((s) => s.trim());\n    return (h(\"ul\", { class: `tbody__tag-list` }, tags.map((tag) => (h(\"li\", null,\n      h(\"scale-tag\", { size: \"small\" }, tag))))));\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected content: a telephone number  string (eg: 'tel:+491234567')\nconst TelephoneCell = {\n  defaults: {\n    sortBy: 'text',\n  },\n  render: ({ content }) => {\n    // Remove protocol (tell:)\n    const telephoneNoProtocol = content.replace(/^tel:/i, '');\n    return h(\"scale-link\", { href: content }, telephoneNoProtocol);\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n// Expected content: unformated string 'this is a string'\n// Options\n// variant?: string 'body' | 'h6' | 'h5' | etc\n// editable?: boolean = false\n// iconPrefix?: string eg 'action-download'\n// iconSuffix?: string eg 'action-download'\nconst TextCell = {\n  defaults: {\n    sortBy: 'text',\n  },\n  render: ({ field, content, component, rowIndex, columnIndex, isAutoWidthCheck, }) => {\n    const { variant = 'body', editable = false, iconPrefix, iconSuffix, label, } = field;\n    // Input component doesn't expand with content, so need to return a fake element that simulates width\n    if (isAutoWidthCheck && editable) {\n      return (h(\"p\", { class: `scl-body`, style: { paddingRight: '26px' } }, content));\n    }\n    if (editable) {\n      const props = {\n        type: 'text',\n        size: 'small',\n        value: content,\n        label,\n      };\n      // TODO: use blur to reduce number of changes - but doesn't pass value\n      // TODO: apply variant and iconPrefix/Suffix to editable text\n      props.onScaleChange = ({ detail }) => {\n        const { value } = detail;\n        // Update rows data\n        component.rows[rowIndex][columnIndex] = value;\n        // Trigger event\n        component.triggerEditEvent(value, rowIndex, columnIndex);\n      };\n      return h(\"scale-text-field\", Object.assign({}, props));\n    }\n    else {\n      let value = content;\n      // Add an extra couple of characters for the width check to avoid clipping\n      if (isAutoWidthCheck) {\n        value += 'w';\n      }\n      return (h(\"div\", { class: `tbody__text-cell` },\n        iconPrefix && (h(\"span\", { class: `tbody__text-cell-prefix` }, h(`scale-icon-${iconPrefix}`))),\n        h(\"p\", { class: `scl-${variant}` }, value),\n        iconSuffix && (h(\"span\", { class: `tbody__text-cell-suffix` }, h(`scale-icon-${iconSuffix}`)))));\n    }\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n    t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n        t[p[i]] = s[p[i]];\n    }\n  return t;\n};\nconst ActionsCell = {\n  defaults: {},\n  render: ({ content }) => {\n    return (h(\"div\", { class: `tbody__actions` }, content.map((action) => {\n      const { label } = action, props = __rest(action, [\"label\"]);\n      if (typeof label === 'object' && '__html' in label) {\n        return (h(\"scale-button\", Object.assign({ innerHTML: label.__html }, props)));\n      }\n      return h(\"scale-button\", Object.assign({}, props), label);\n    })));\n  },\n};\n\n/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nconst CELL_TYPES = {\n  checkbox: CheckboxCell,\n  date: DateCell,\n  email: EmailCell,\n  graph: GraphCell,\n  html: HTMLCell,\n  link: LinkCell,\n  number: NumberCell,\n  select: SelectCell,\n  tags: TagsCell,\n  telephone: TelephoneCell,\n  text: TextCell,\n  actions: ActionsCell,\n};\n// Fallback if no type set on field\nconst DEFAULT_CELL_TYPE = 'text';\n// Common cell defaults, can be overridden in cell type classes\nconst CELL_DEFAULTS = {\n  maxWidth: Infinity,\n  minWidth: 20,\n  resizable: true,\n  sortable: false,\n  sortBy: 'text',\n  textAlign: 'left',\n  visible: true,\n  width: 'auto',\n};\n\nconst dataGridCss = \".scl-body{margin:0;font:var(--telekom-text-style-body)}.scl-label{margin:0;font:var(--telekom-text-style-small)}.scl-h1{margin:0;font:var(--telekom-text-style-heading-1)}.scl-h2{margin:0;font:var(--telekom-text-style-heading-2)}.scl-h3{margin:0;font:var(--telekom-text-style-heading-3)}.scl-h4{margin:0;font:var(--telekom-text-style-heading-4)}.scl-h5{margin:0;font:var(--telekom-text-style-heading-5)}.scl-h6{margin:0;font:var(--telekom-text-style-heading-6)}:host{font-family:var(--telekom-typography-font-family-sans);font-size:var(--telekom-typography-font-size-body);font-weight:var(--telekom-typography-font-weight-regular);line-height:var(--telekom-typography-line-spacing-standard);color:var(--telekom-color-text-and-icon-standard)}.data-grid input,.data-grid select{letter-spacing:inherit;font-weight:inherit;font-family:inherit;line-height:inherit}.data-grid{position:relative;display:block;background:var(--telekom-color-ui-state-fill-standard);border-radius:var(--telekom-radius-large);border:1px solid var(--telekom-color-ui-faint);overflow:hidden}.data-grid--hide-border{border:none}.data-grid__auto-width-check{opacity:0}.data-grid__title-block{display:flex;align-items:center;justify-content:space-between;padding-right:62px;padding-left:var(--telekom-spacing-unit-x6)}.data-grid__settings-menu{position:absolute;top:var(--telekom-spacing-unit-x4);right:var(--telekom-spacing-unit-x4)}.data-grid__scroll-container{overflow:auto;overflow-x:overlay;overflow-y:overlay;ms-overflow-style:-ms-autohiding-scrollbar;scrollbar-gutter:stable}.data-grid__table{border-spacing:0;border-collapse:collapse;overflow:hidden}.data-grid--hide-menu .data-grid__settings-menu{display:none}.data-grid:not(.data-grid--hide-menu) .data-grid__title-block{min-height:72px}.data-grid--hide-menu .data-grid__title-block{padding-right:var(--telekom-spacing-unit-x4)}.thead{display:block;white-space:nowrap;border-bottom:1px solid var(--telekom-color-ui-faint);position:relative;background:var(--telekom-color-ui-state-fill-standard);z-index:1}.data-grid--freeze-header .thead{z-index:30;background-color:var(--telekom-color-background-canvas)}.thead-sortable{cursor:pointer}.thead-sortable:focus{box-shadow:inset 0 0 0 var(--telekom-spacing-unit-x05)\\n    var(--telekom-color-functional-focus)}.thead__cell{display:inline-flex;align-items:center;height:var(--telekom-spacing-unit-x8);text-align:left;user-select:none;position:relative;padding:0 var(--telekom-spacing-unit-x4);color:var(--telekom-color-text-and-icon-additional)}.thead__cell--numbered{text-align:right;justify-content:flex-end}.thead__cell--selection{justify-content:center;text-align:center}.thead__cell--selection xds-checkbox::part(container){justify-content:center}.thead__title{color:var(--telekom-color-text-and-icon-standard)}.thead__text{font-size:var(--telekom-typography-font-size-small);line-height:var(--telekom-typography-line-spacing-standard);position:relative}.thead__arrow-top,.thead__arrow-bottom{position:absolute;display:none;top:4px;left:-12px;border:4px solid transparent}.thead__arrow-top{border-top:none;border-bottom:5px solid var(--telekom-color-text-and-icon-standard)}.thead__arrow-bottom{border-bottom:none;border-top:5px solid var(--telekom-color-text-and-icon-standard)}.thead__sort-prompt{position:absolute;top:0;left:0;width:100%;height:100%;margin:0;background:none;border:0;opacity:1;cursor:pointer}.thead__divider{position:absolute;right:calc(-1 * var(--telekom-spacing-unit-x2));bottom:0px;height:100%;padding:19px var(--telekom-spacing-unit-x2) 0px;box-sizing:border-box;cursor:col-resize;z-index:1}.thead__divider-line{pointer-events:none;height:100%;width:1px;background:var(--telekom-color-ui-faint)}.thead__cell:first-child{padding-left:var(--telekom-spacing-unit-x6)}.thead__cell:focus{outline:none}.thead__cell[aria-sort='ascending'] .thead__arrow-top{display:block}.thead__cell[aria-sort='descending'] .thead__arrow-bottom{display:block}.thead__cell[aria-sort]:hover{color:var(--telekom-color-text-and-icon-primary-hovered)}.thead__cell[aria-sort='none']:hover .thead__arrow-top{display:block;border-bottom:5px solid var(--telekom-color-text-and-icon-primary-hovered)}.thead__cell[aria-sort='ascending']:hover .thead__arrow-top{border-bottom:5px solid var(--telekom-color-text-and-icon-primary-hovered)}.thead__cell[aria-sort='descending']:hover .thead__arrow-bottom{border-top:5px solid var(--telekom-color-text-and-icon-primary-hovered)}.tbody{display:block}.tbody__row{display:block;white-space:nowrap}.tbody__mobile-title{display:none}.tbody__mobile-label{display:none}.tbody__cell{display:inline-block;margin:8px;padding:8px;overflow:hidden;line-height:32px}.tbody__cell--numbered{text-align:right}.tbody__cell--selection{justify-content:center;text-align:center}.tbody__cell--selection scale-checkbox::part(container),.tbody__cell--selection scale-checkbox [part='container']{justify-content:center}.tbody__cell scale-checkbox{width:auto}.tbody__nested{white-space:nowrap;padding:0px;margin:0px}.tbody__nested-cell{display:block;padding:var(--telekom-spacing-unit-x4);margin:0px}.tbody__cell:first-of-type{margin-left:var(--telekom-spacing-unit-x4);}.tbody__nested-cell:first-child{margin-left:0px}.data-grid--shade-alternate .tbody__row:nth-of-type(even),.data-grid--shade-alternate .tbody__nested:nth-of-type(even){background:var(--telekom-color-background-surface-subtle)}.data-grid__auto-width-check .tbody__cell{padding:0}.tbody__tag-list{list-style:none;padding:0;margin:0}.tbody__tag-list li{display:inline-block;margin-right:8px}.tbody__tag-list li:last-child{margin-right:0}.data-grid input[type='checkbox']{display:block;height:14px;margin:5px 4px}.tbody__text-cell{display:flex;align-items:center}.tbody__text-cell-prefix{display:inline-flex;align-items:center;margin-right:0.5em}.tbody__text-cell-suffix{display:inline-flex;align-items:center;margin-left:0.5em}.tbody__cell p{overflow:hidden;text-overflow:ellipsis}.tbody__cell scale-link{overflow:hidden;text-overflow:ellipsis}.tbody__bar-cell{display:inline-flex;width:100%}.tbody__cell scale-progress-bar{flex-grow:1}.tbody__actions scale-button{margin-right:var(--telekom-spacing-unit-x2)}.info{height:54px;position:relative;border-top:var(--telekom-line-weight-standard) solid\\n    var(--telekom-color-ui-subtle);display:flex;justify-content:center}.info__selection{position:absolute;bottom:0;line-height:54px;left:var(--telekom-spacing-unit-x6)}.data-grid--hide-border:not(.data-grid--mobile) .info__pagination{border-bottom:1px solid var(--telekom-color-ui-subtle);border-right:1px solid var(--telekom-color-ui-subtle)}.data-grid--mobile{border:none;background:none}.data-grid--mobile .data-grid__title-block{padding-left:0;padding-right:46px}.data-grid--hide-menu.data-grid--mobile .data-grid__title-block{padding-right:0}.data-grid--mobile .data-grid__settings-menu{right:0}.data-grid--mobile .data-grid__scroll-container{height:auto !important}.data-grid--mobile .data-grid__table{display:block;height:auto !important}.data-grid--mobile .thead{display:none}.data-grid--mobile .tbody{display:block}.data-grid--mobile .tbody__row{display:block;position:relative;white-space:initial;margin:0 0 var(--telekom-spacing-unit-x2);padding:var(--telekom-spacing-unit-x6);border-radius:var(--telekom-radius-standard);background:var(--telekom-color-background-surface);border:1px solid var(--telekom-color-ui-faint)}.data-grid--mobile .tbody__row:hover{background:var(--telekom-color-background-surface)}.data-grid--mobile .tbody__mobile-title{display:block;margin-bottom:var(--telekom-spacing-unit-x2)}.data-grid--mobile .tbody__mobile-label{display:block}.data-grid--mobile .tbody__cell{display:flex;align-items:center;width:auto !important;padding:5px 0;margin:0;min-height:var(--telekom-spacing-unit-x6);line-height:var(--telekom-spacing-unit-x6);overflow:auto;overflow-x:hidden}.data-grid--mobile .tbody__cell--used-as-mobile-title{display:none}.data-grid--mobile .tbody__mobile-label{display:block;width:100px;flex-shrink:0;color:var(--telekom-color-text-and-icon-additional);font-size:var(--telekom-typography-font-size-small);font-weight:var(--telekom-typography-font-weight-medium)}.data-grid--mobile .tbody__cell:first-child{margin-left:0px}.data-grid--mobile .tbody__cell--selection{position:absolute;top:19px;right:12px}.data-grid--mobile .tbody__cell--numbered{position:absolute;top:19px;right:56px}.data-grid--mobile .tbody__cell scale-text-field,.data-grid--mobile .tbody__cell scale-dropdown{width:100%}.data-grid--mobile .tbody__nested{width:auto !important}.data-grid--mobile .tbody__nested-cell{padding:0;margin-bottom:var(--telekom-spacing-unit-x2)}.data-grid--mobile.data-grid--shade-alternate .tbody__row:nth-of-type(even){background:var(--telekom-color-background-surface)}.data-grid--mobile .info{height:auto;border-top:none;text-align:center}.data-grid--mobile .info__selection{position:relative;left:0}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}\";\n\n/* Reused Private Variables */\nlet resizeObserver;\nconst name = 'data-grid';\nconst DataGrid = class {\n  /* 6. Lifecycle Events (call order) */\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scaleEdit = createEvent(this, \"scale-edit\", 7);\n    this.scaleEditLegacy = createEvent(this, \"scaleEdit\", 7);\n    this.scaleSort = createEvent(this, \"scale-sort\", 7);\n    this.scaleSortLegacy = createEvent(this, \"scaleSort\", 7);\n    /* 2. State Variables (alphabetical) */\n    /** Used to force render after sorting/selection */\n    this.forceRender = 0;\n    /** Pagination starting index */\n    this.paginationStart = 0;\n    /** Table scroll value for frozen header  */\n    this.scrollY = 0;\n    /** (optional) Freeze header row from scrolling */\n    this.freezeHeader = false;\n    /** (optional) Heading string */\n    this.heading = '';\n    /** (optional) Set to true to remove border */\n    this.hideBorder = false;\n    /** (optional) Set to true to hide header row */\n    this.hideHeader = false;\n    /** (optional) Set to true to remove info footer block including pagination and selection status */\n    this.hideInfo = false;\n    /** (optional) Set to true to hide settings menu */\n    this.hideMenu = false;\n    /** (optional) Set to true to add numbers column */\n    this.numbered = false;\n    /** (optional) Set number of rows to display per pagination page */\n    this.pageSize = Infinity;\n    /** (optional) Set to true to add selection column */\n    this.selectable = false;\n    /** Read-only selection array - populated with raw data from selected rows */\n    this.selection = [];\n    /** (optional) Shade every second row darker */\n    this.shadeAlternate = true;\n    /** (optional) Set to false to hide table, used for nested tables to re-render upon toggle */\n    this.visible = true;\n    /** Stored active sorting column index, for state removal */\n    this.activeSortingIndex = -1;\n    /** Track component width to constrict nested content, which is necessary with table layout */\n    this.contentWidth = 100;\n    /** Flag to know to check for data completeness */\n    this.dataNeedsCheck = true;\n    /** Flag to know if rendering can commence */\n    this.hasData = false;\n    /** Flag that is true when width below a certain limit */\n    this.isMobile = false;\n    /** Flag that enough data supplied to warrant pagination */\n    this.isPagination = false;\n    /** Flag that is true if any fields are sortable */\n    this.isSortable = false;\n    /** Track container width to avoid re-calculating column stretching */\n    this.lastContainerWidth = 100;\n    /** Index of field to use as mobile title, if any */\n    this.mobileTitleIndex = -1;\n    /** Determine if auto-width parsing needed */\n    this.needsAutoWidthParse = false;\n    /** Force column resize after render */\n    this.needsColumnResize = false;\n    /** Auto-calculated number column width */\n    this.numberColumnWidth = 0;\n    /** Selection column width */\n    this.selectionColumnWidth = 22;\n    this.handleMenuListClick = (event) => {\n      const menuItems = ['sortBy', 'toggleVisibility'];\n      const currentMenuItemsIndex = menuItems.indexOf(event.target.id);\n      if (currentMenuItemsIndex > -1) {\n        // check if there is already opened flyout menu list with different id, if opened, close it\n        const inactiveMenuItem = this.hostElement.shadowRoot.querySelector(`#${menuItems[1 - currentMenuItemsIndex]}List`);\n        if (inactiveMenuItem) {\n          inactiveMenuItem.setAttribute('opened', 'false');\n        }\n      }\n    };\n    // Bind certain callbacks to scope\n    this.onDividerMove = this.onDividerMove.bind(this);\n    this.onDividerUp = this.onDividerUp.bind(this);\n    this.applyResponsiveClasses = this.applyResponsiveClasses.bind(this);\n    this.updateColumnStretching = this.updateColumnStretching.bind(this);\n  }\n  componentWillLoad() {\n    this.fieldsHandler();\n    this.rowsHandler();\n  }\n  componentWillUpdate() { }\n  componentDidRender() {\n    if (this.needsAutoWidthParse) {\n      this.calculateAutoWidths();\n    }\n    // Wait a frame to avoid warning about possible infinite loop\n    setTimeout(() => {\n      if (this.needsColumnResize) {\n        this.updateColumnStretching();\n      }\n    });\n  }\n  componentDidLoad() {\n    this.addResizeObserver();\n  }\n  componentDidUpdate() { }\n  disconnectedCallback() {\n    this.removeResizeObserver();\n  }\n  /* 7. Listeners */\n  fieldsHandler() {\n    this.parseFields();\n    this.checkForMobileTitle();\n    this.checkForSortableFields();\n    this.dataNeedsCheck = true;\n  }\n  rowsHandler() {\n    this.parseRows();\n    this.setInitialRowProps();\n    this.resetSortingToggle();\n    this.dataNeedsCheck = true;\n    // Set flag to dirty to redo column width with new data\n    this.needsAutoWidthParse = true;\n    this.needsColumnResize = true;\n    if (\n    // when we run out of items on the current page\n    this.rows.length <= this.paginationStart &&\n      // and we are NOT on the first page\n      this.paginationStart - this.pageSize > -1) {\n      // step back one page\n      this.paginationStart = this.paginationStart - this.pageSize;\n    }\n  }\n  /* 8. Public Methods */\n  /* 9. Local Methods */\n  parseFields() {\n    if (this.fields && typeof this.fields === 'string') {\n      this.fields = JSON.parse(this.fields);\n    }\n  }\n  parseRows() {\n    if (this.rows && typeof this.rows === 'string') {\n      this.rows = JSON.parse(this.rows);\n    }\n  }\n  setInitialRowProps() {\n    if (!this.rows || !this.rows.length) {\n      return;\n    }\n    this.rows.forEach((row, i) => {\n      // Store indices of original order on rows for resetting sorting\n      row.initialIndex = i;\n      // Set initial selected flag\n      row.selected = false;\n    });\n    // Determine if pagination will be required\n    this.isPagination = this.pageSize <= this.rows.length - 1;\n  }\n  checkHasData() {\n    // Need both fields and data content in order to populate\n    if (!this.fields) {\n      return false;\n    }\n    for (let i = 0; i < this.fields.length; i++) {\n      // Use default type if none set\n      if (!this.fields[i].type) {\n        this.fields[i].type = DEFAULT_CELL_TYPE;\n      }\n      if (!CELL_TYPES[this.fields[i].type]) {\n        // tslint:disable-next-line: no-console\n        console.warn(`Unrecognised field type: \"${this.fields[i].type}\"`);\n        return false;\n      }\n    }\n    if (!this.rows || !this.rows.length) {\n      return false;\n    }\n    for (let i = 0; i < this.rows.length; i++) {\n      if (this.rows[i].length !== this.fields.length) {\n        // tslint:disable-next-line: no-console\n        console.warn(`Unable to render ${this.heading && `\"${this.heading}\" `}table: row data length not equal to supplied fields.`);\n        return false;\n      }\n    }\n    return true;\n  }\n  checkForMobileTitle() {\n    // Reset for new data\n    this.mobileTitleIndex = -1;\n    if (!this.fields) {\n      return;\n    }\n    this.fields.every(({ mobileTitle }, i) => {\n      if (mobileTitle) {\n        this.mobileTitleIndex = i;\n        return false;\n      }\n      return true;\n    });\n  }\n  checkForSortableFields() {\n    this.isSortable = false;\n    if (!this.fields) {\n      return;\n    }\n    this.fields.forEach(({ sortable }) => {\n      if (sortable) {\n        this.isSortable = true;\n      }\n    });\n  }\n  getCssClassMap() {\n    return classnames(name, !this.isMobile && `${name}--desktop`, this.isMobile && `${name}--mobile`, this.shadeAlternate && `${name}--shade-alternate`, this.freezeHeader && `${name}--freeze-header`, this.hideBorder && `${name}--hide-border`, this.hideMenu && `${name}--hide-menu`);\n  }\n  polyfillMousePosition(e) {\n    // For touch\n    if (e.changedTouches && e.changedTouches.length) {\n      e.x = e.changedTouches[0].pageX;\n      e.y = e.changedTouches[0].pageY;\n    }\n    // For cross browser support\n    if (e.x === undefined) {\n      e.x = e.clientX;\n      e.y = e.clientY;\n    }\n  }\n  getDefaultLongestContent({ rows, columnIndex }) {\n    let maxLength = 0;\n    let longestContent;\n    rows.forEach((row) => {\n      const length = row[columnIndex].toString().length;\n      if (length > maxLength) {\n        longestContent = row[columnIndex];\n        maxLength = length;\n      }\n    });\n    return longestContent;\n  }\n  // Selection handlers\n  toggleSelectAll() {\n    if (!this.elToggleSelectAll) {\n      return;\n    }\n    this.rows.forEach((row) => (row.selected = this.elToggleSelectAll.checked));\n    this.updateReadableSelection();\n    this.forceRender++;\n  }\n  toggleRowSelect({ target }, rowIndex) {\n    this.rows[rowIndex].selected = target.checked;\n    this.updateReadableSelection();\n    this.forceRender++;\n  }\n  updateReadableSelection() {\n    this.selection.length = 0;\n    this.rows.forEach((row) => row.selected && this.selection.push(row));\n    // Check header checkbox if any or none are selected\n    const selectAll = this.hostElement.shadowRoot.querySelector('.thead__cell--selection scale-checkbox');\n    selectAll.checked = !!this.selection.length;\n    // selectAll.indeterminate = !!this.selection.length;\n  }\n  // Sorting handlers\n  toggleTableSorting(sortDirection, columnIndex, type) {\n    // Remove sorting from previous column index\n    if (this.activeSortingIndex > -1 &&\n      this.activeSortingIndex !== columnIndex) {\n      this.fields[this.activeSortingIndex].sortDirection = 'none';\n    }\n    // Store new column index\n    this.activeSortingIndex = columnIndex;\n    const newSortDirection = sortDirection === 'none'\n      ? 'ascending'\n      : sortDirection === 'ascending'\n        ? 'descending'\n        : 'none';\n    this.fields[columnIndex].sortDirection = newSortDirection;\n    this.sortTable(newSortDirection, type, columnIndex);\n  }\n  sortTable(sortDirection, type, columnIndex) {\n    if (sortDirection === 'none') {\n      this.rows.sort((a, b) => {\n        return a.initialIndex - b.initialIndex;\n      });\n    }\n    else {\n      switch ((CELL_TYPES[type] &&\n        CELL_TYPES[type].defaults &&\n        CELL_TYPES[type].defaults.sortBy) ||\n        CELL_DEFAULTS.sortBy) {\n        case 'text':\n          if (sortDirection === 'ascending') {\n            this.rows.sort((a, b) => {\n              const textA = a[columnIndex].toLowerCase();\n              const textB = b[columnIndex].toLowerCase();\n              return textA < textB ? -1 : textA > textB ? 1 : 0;\n            });\n          }\n          else {\n            this.rows.sort((a, b) => {\n              const textA = a[columnIndex].toLowerCase();\n              const textB = b[columnIndex].toLowerCase();\n              return textA > textB ? -1 : textA < textB ? 1 : 0;\n            });\n          }\n          break;\n        case 'number':\n          if (sortDirection === 'ascending') {\n            this.rows.sort((a, b) => {\n              return Number(a[columnIndex]) - Number(b[columnIndex]);\n            });\n          }\n          else {\n            this.rows.sort((a, b) => {\n              return Number(b[columnIndex]) - Number(a[columnIndex]);\n            });\n          }\n          break;\n      }\n    }\n    this.forceRender++;\n    // Trigger event\n    this.triggerSortEvent(sortDirection, type, columnIndex);\n  }\n  resetSortingToggle() {\n    if (this.activeSortingIndex > -1) {\n      this.fields[this.activeSortingIndex].sortDirection = 'none';\n    }\n    this.activeSortingIndex = -1;\n  }\n  // Column resize handlers\n  onDividerDown(e) {\n    this.polyfillMousePosition(e);\n    // For touch -  Prevent mousedown firing, and native scroll\n    e.preventDefault();\n    // Store divider elem for use in move and end events\n    this.activeDivider = e.target;\n    // Store initial value to calculate change\n    e.target.downX = e.x;\n    // Reset to avoid reapplying previous change\n    this.activeDivider.interactiveWidth = 0;\n    window.addEventListener('mousemove', this.onDividerMove);\n    window.addEventListener('touchmove', this.onDividerMove);\n    window.addEventListener('mouseup', this.onDividerUp);\n    window.addEventListener('touchend', this.onDividerUp);\n  }\n  onDividerMove(e) {\n    // TODO: calculate width stretchWidth to drop in correct location\n    this.polyfillMousePosition(e);\n    const { width, min, max } = this.activeDivider.dataset;\n    const diff = e.x - this.activeDivider.downX;\n    const newWidth = Math.min(Number(max), Math.max(Number(min), Number(width) + diff));\n    const adjustedDiff = newWidth - Number(width);\n    this.activeDivider.interactiveWidth = newWidth;\n    // Give immediate visual feedback\n    this.activeDivider.style.transform = `translateX(${adjustedDiff}px)`;\n  }\n  onDividerUp() {\n    const { index } = this.activeDivider.dataset;\n    // Store new width on the field data\n    if (this.activeDivider.interactiveWidth) {\n      this.fields[Number(index)].width = this.activeDivider.interactiveWidth;\n    }\n    // Reset visual feedback\n    this.activeDivider.style.transform = `translateX(0px)`;\n    window.removeEventListener('mousemove', this.onDividerMove);\n    window.removeEventListener('touchmove', this.onDividerMove);\n    window.removeEventListener('mouseup', this.onDividerUp);\n    window.removeEventListener('touchend', this.onDividerUp);\n    // Update column stretching before rendering\n    this.needsColumnResize = true;\n    this.updateColumnStretching();\n    // Render to apply change\n    this.forceRender++;\n  }\n  // Column visibility toggle handlers\n  toggleVisibilityMenu(e) {\n    e.preventDefault();\n    // TODO: replace this with contextual menu component, when available\n    const visibilityToggle = this.hostElement.shadowRoot.querySelector('.visibility-toggle');\n    const menu = visibilityToggle.children[1];\n    // By default\n    if (visibilityToggle.style.display === 'none') {\n      visibilityToggle.style.display = 'block';\n      menu.style.transform = `translate(${e.clientX}px, ${e.clientY}px)`;\n    }\n    else {\n      visibilityToggle.style.display = 'none';\n    }\n  }\n  toggleColumnVisibility(value, columnIndex) {\n    this.fields[columnIndex].visible = value;\n    this.forceRender++;\n    // Update column stretching\n    this.needsColumnResize = true;\n    this.updateColumnStretching();\n  }\n  // Resize handlers\n  addResizeObserver() {\n    if (!resizeObserver) {\n      // @ts-ignore\n      resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          // Skip if table not visible/attached\n          if (entry.target.offsetParent === null) {\n            return;\n          }\n          entry.target.applyResponsiveClasses(entry);\n          entry.target.updateColumnStretching();\n        }\n      });\n    }\n    this.elMmainContainer = this.hostElement.shadowRoot.querySelector(`.${name}`);\n    // Add this instance's callbacks, as resizeObserver is reused\n    this.elMmainContainer.applyResponsiveClasses = this.applyResponsiveClasses;\n    this.elMmainContainer.updateColumnStretching = this.updateColumnStretching;\n    resizeObserver.observe(this.elMmainContainer);\n  }\n  removeResizeObserver() {\n    if (this.elMmainContainer) {\n      resizeObserver.unobserve(this.elMmainContainer);\n    }\n  }\n  applyResponsiveClasses() {\n    // Apply container-scoped media-query-style classes\n    const newIsMobile = this.elMmainContainer.offsetWidth <= 500;\n    if (this.isMobile !== newIsMobile) {\n      this.forceRender++;\n    }\n    this.isMobile = newIsMobile;\n  }\n  updateColumnStretching() {\n    // NOTE: any styling padding/margin width changes need to be adjusted here as well\n    // Ignore auto-width-check content renders\n    if (this.needsAutoWidthParse) {\n      return;\n    }\n    const container = this.elMmainContainer;\n    // Minus 2 for border\n    const containerWidth = container.offsetWidth - 2;\n    const hasContainerWidthChanged = this.lastContainerWidth !== containerWidth;\n    // If width hasn't changed, don't re-calculate\n    if (!hasContainerWidthChanged && !this.needsColumnResize) {\n      return;\n    }\n    this.needsColumnResize = false;\n    this.lastContainerWidth = containerWidth;\n    // Don't calculate when mobile layout\n    if (container.offsetWidth <= 500) {\n      return;\n    }\n    // The theoretical target width - ignoring any previously applied stretching\n    const targetContentWidth = (() => {\n      let total = 0;\n      // Extra margin on first column\n      total += 8;\n      if (this.numbered) {\n        // 32 for padding+margin\n        total += this.numberColumnWidth + 32;\n        // this.selectionColumnWidth;\n      }\n      if (this.selectable) {\n        // 32 for padding+margin\n        total += this.selectionColumnWidth + 32;\n        // If both selectable and numbered - adjust for reduced margin between\n        if (this.numbered) {\n          total -= 16;\n        }\n      }\n      // Add each visible column's target width\n      this.fields.forEach(({ visible = true, width }) => {\n        if (visible) {\n          // 32 for padding+margin\n          total += width + 32;\n        }\n      });\n      return total;\n    })();\n    // Update value passed to nested content to overcome table display layout\n    this.contentWidth = Math.max(targetContentWidth, containerWidth);\n    const diff = containerWidth - targetContentWidth;\n    if (diff <= 0) {\n      // content larger than container (scrollbar), remove all stretching\n      this.fields.forEach((field) => (field.stretchWidth = 0));\n    }\n    else {\n      // container larger than content (gap to the right), calculate stretching\n      // If stretchWeight set, divide value between total to get final weight\n      // If stretchWeight unset, share remainder of 1 (if any) between all unset cols\n      let totalSetWeight = 0;\n      let unsetColsCount = 0;\n      this.fields.forEach(({ visible = true, stretchWeight }) => {\n        // Disregard invisible columns\n        if (!visible) {\n          return;\n        }\n        if (typeof stretchWeight === 'number') {\n          totalSetWeight += stretchWeight;\n        }\n        else {\n          unsetColsCount++;\n        }\n      });\n      const remainderWeight = Math.max(0, 1 - totalSetWeight);\n      // Set total to be divided against to be above 1 to keep total set/unset weights equal to 1\n      totalSetWeight = Math.max(1, totalSetWeight);\n      this.fields.forEach((field) => {\n        const { visible = true, stretchWeight } = field;\n        if (!visible) {\n          return;\n        }\n        // Actual stretch weight, out of a total 1 for all columns\n        let weight = 0;\n        if (typeof stretchWeight === 'number') {\n          weight = stretchWeight / totalSetWeight;\n        }\n        else if (remainderWeight > 0) {\n          weight = remainderWeight / unsetColsCount;\n        }\n        // Apply stretching with the weight percentage\n        field.stretchWidth = diff * weight;\n      });\n    }\n    this.forceRender++;\n  }\n  // Auto column width handlers\n  calculateAutoWidths() {\n    let isVisible = false;\n    const columns = this.hostElement.shadowRoot.querySelectorAll(`.${name}__auto-width-check td`);\n    columns.forEach((cell) => {\n      // Make sure table is actually rendered (eg not display:none etc)\n      if (!isVisible && cell.offsetParent !== null) {\n        isVisible = true;\n      }\n      if (!isVisible) {\n        return;\n      }\n      // Update field width with that of largest content\n      this.fields[cell.dataset.columnindex].width = cell.clientWidth;\n    });\n    if (!isVisible) {\n      return;\n    }\n    // Wrap in setTimeout to avoid warning about forcing render within render callback\n    setTimeout(() => {\n      this.needsAutoWidthParse = false;\n      this.forceRender++;\n    });\n  }\n  // Event triggers\n  triggerSortEvent(sortDirection, type, columnIndex) {\n    const data = {\n      rows: this.rows,\n      type,\n      sortDirection,\n      columnIndex,\n    };\n    emitEvent(this, 'scaleSort', data);\n  }\n  triggerEditEvent(value, rowIndex, columnIndex) {\n    const data = {\n      rows: this.rows,\n      rowIndex,\n      columnIndex,\n      value,\n    };\n    emitEvent(this, 'scaleEdit', data);\n    // Force render for checkboxes\n    this.forceRender++;\n  }\n  onTableScroll() {\n    if (!this.freezeHeader || this.hideHeader) {\n      return;\n    }\n    // Freeze header\n    const scrollY = this.elScrollContainer.scrollTop;\n    this.elTableHead.style.transform = `translateY(${scrollY}px)`;\n  }\n  renderSettingsMenu() {\n    return (h(\"scale-menu-flyout\", { class: `${name}__settings-menu` }, h(\"scale-button\", { slot: \"trigger\", variant: \"secondary\", \"icon-only\": true, \"data-sortable\": this.isSortable }, h(\"scale-icon-service-settings\", { accessibilityTitle: \"Table options\" })), h(\"scale-menu-flyout-list\", null, this.isSortable && (h(\"scale-menu-flyout-item\", { id: \"sortBy\", onClick: this.handleMenuListClick }, h(\"scale-icon-action-sort\", { slot: \"prefix\" }), \"Sort By\", h(\"scale-menu-flyout-list\", { slot: \"sublist\", id: \"sortByList\" }, this.fields.map(({ label, type, sortable, sortDirection = 'none' }, columnIndex) => {\n      if (!sortable) {\n        return '';\n      }\n      return (h(\"scale-menu-flyout-item\", { \"onScale-select\": () => this.toggleTableSorting(sortDirection, columnIndex, type) }, sortDirection === 'ascending' && (h(\"scale-icon-navigation-collapse-up\", { size: 16, slot: \"prefix\" })), sortDirection === 'descending' && (h(\"scale-icon-navigation-collapse-down\", { size: 16, slot: \"prefix\" })), sortDirection === 'none' && (h(\"scale-icon-navigation-collapse-up\", { size: 16, slot: \"prefix\", style: { opacity: '0' } })), label || type));\n    })))), h(\"scale-menu-flyout-item\", { id: \"toggleVisibility\", onClick: this.handleMenuListClick }, h(\"scale-icon-action-hide-password\", { slot: \"prefix\" }), \"Toggle Visibility\", h(\"scale-menu-flyout-list\", { slot: \"sublist\", \"close-on-select\": \"false\", id: \"toggleVisibilityList\" }, this.fields.map(({ label, type, visible = CELL_TYPES[type].defaults.visible !== undefined\n      ? CELL_TYPES[type].defaults.visible\n      : CELL_DEFAULTS.visible, }, columnIndex) => {\n      return (h(\"scale-menu-flyout-item\", { checkable: \"checkbox\", checked: !!visible, \"onScale-select\": () => this.toggleColumnVisibility(!visible, columnIndex) }, label || type));\n    }))), this.selectable && (h(\"scale-menu-flyout-item\", { \"onScale-select\": () => {\n        this.elToggleSelectAll.checked =\n          !this.elToggleSelectAll.checked;\n        this.toggleSelectAll();\n      } }, h(\"scale-icon\", { slot: \"prefix\", path: \"M20.9328 10.6668C20.5132 10.6668 20.1731 11.0069 20.1731 11.4265V20.3269H1.5194V1.67309H16.5049C16.9245 1.67309 17.2646 1.33292 17.2646 0.913386C17.2646 0.49385 16.9245 0.153687 16.5049 0.153687H0.759699C0.340163 0.153687 0 0.49385 0 0.913386V21.0866C0 21.5062 0.340163 21.8463 0.759699 21.8463H20.9328C21.3523 21.8463 21.6925 21.5062 21.6925 21.0866V11.4265C21.6925 11.0069 21.3524 10.6668 20.9328 10.6668ZM23.7774 0.653387C23.4807 0.356739 22.9997 0.356739 22.703 0.653387L10.3293 13.0272L7.25501 9.9529C6.9583 9.65625 6.47732 9.65625 6.18061 9.9529C5.88396 10.2496 5.88396 10.7306 6.18061 11.0273L9.7921 14.6388C9.94045 14.7871 10.1349 14.8613 10.3293 14.8613C10.5237 14.8613 10.7181 14.7871 10.8665 14.6388L23.7774 1.72778C24.0741 1.43108 24.0741 0.950095 23.7774 0.653387Z\" }), \"Select / Deselect All\")), h(\"slot\", { name: \"menu\" }))));\n  }\n  renderTable() {\n    if (this.needsAutoWidthParse) {\n      return this.renderAutoWidthCheck();\n    }\n    return (h(\"div\", { ref: (el) => (this.elScrollContainer = el), class: `${name}__scroll-container`, style: { height: this.height || 'auto' }, onScroll: () => this.onTableScroll() }, h(\"table\", { class: `${name}__table` }, this.renderTableHead(), this.renderTableBody())));\n  }\n  renderAutoWidthCheck() {\n    // Calculate number column width\n    this.numberColumnWidth = this.rows.length.toString().length * 9;\n    // Get columns with width option set to 'auto'\n    const autoCols = [];\n    this.fields.forEach(({ type, width = CELL_TYPES[type].defaults.width || CELL_DEFAULTS.width, }, columnIndex) => {\n      if (width === 'auto') {\n        autoCols.push(columnIndex);\n      }\n    });\n    if (!autoCols.length) {\n      this.needsAutoWidthParse = false;\n      return this.renderTable();\n    }\n    return (h(\"table\", { class: `${name}__auto-width-check ${name}__table` }, h(\"tr\", { class: `tbody__row` }, autoCols.map((columnIndex) => {\n      const field = this.fields[columnIndex];\n      const { type, cell = CELL_TYPES[type] } = field;\n      // Find largest content of each type. Use custom getter if exists\n      const getLongestContent = cell.getLongestContent || this.getDefaultLongestContent;\n      const content = getLongestContent({\n        rows: this.rows,\n        columnIndex,\n        field,\n      });\n      return (h(\"td\", { class: `tbody__cell`, style: { width: 'auto' }, \"data-columnindex\": columnIndex }, cell.render({\n        field,\n        content,\n        component: this,\n        isAutoWidthCheck: true,\n      })));\n    }))));\n  }\n  renderTableHead() {\n    return (h(\"thead\", { ref: (el) => (this.elTableHead = el), class: `thead ${this.hideHeader ? 'sr-only' : ''}` }, h(\"tr\", { class: `thead__row` }, this.numbered && this.renderTableHeadNumberedCell(), this.selectable && this.renderTableHeadSelectableCell(), this.fields.map(({ type, label = '', \n    // Params can be set optionally in the fields options, in the cell type\n    // descriptor class, or falls back to common defaults\n    visible = CELL_TYPES[type].defaults.visible !== undefined\n      ? CELL_TYPES[type].defaults.visible\n      : CELL_DEFAULTS.visible, sortable, sortDirection = 'none', resizable = CELL_TYPES[type].defaults.resizable !== undefined\n      ? CELL_TYPES[type].defaults.resizable\n      : CELL_DEFAULTS.resizable, width = CELL_TYPES[type].defaults.width || CELL_DEFAULTS.width, minWidth = CELL_TYPES[type].defaults.minWidth ||\n      CELL_DEFAULTS.minWidth, maxWidth = CELL_TYPES[type].defaults.maxWidth ||\n      CELL_DEFAULTS.maxWidth, textAlign = CELL_TYPES[type].defaults.textAlign ||\n      CELL_DEFAULTS.textAlign, stretchWidth = 0, }, columnIndex) => {\n      if (!visible) {\n        return;\n      }\n      const props = {\n        class: `thead__cell`,\n        style: {\n          width: `calc(${width}px + ${stretchWidth}px)`,\n          textAlign,\n        },\n        'data-type': type,\n      };\n      if (sortable) {\n        props['aria-sort'] = sortDirection;\n      }\n      return (h(\"th\", Object.assign({ title: \"Activate to sort column\" }, props, (sortable\n        ? {\n          onKeyDown: (event) => {\n            if (['Enter', ' '].includes(event.key)) {\n              this.toggleTableSorting(sortDirection, columnIndex, type);\n            }\n          },\n          onClick: () => {\n            this.toggleTableSorting(sortDirection, columnIndex, type);\n          },\n          tabindex: 0,\n          class: `${props.class} thead-sortable`,\n        }\n        : {})), h(\"div\", { class: `thead__title` }, h(\"span\", { class: `thead__text` }, sortable && h(\"span\", { class: `thead__arrow-top` }), sortable && h(\"span\", { class: `thead__arrow-bottom` }), label)), resizable && (h(\"div\", { class: `thead__divider`, \"data-index\": columnIndex, \"data-width\": width, \"data-min\": minWidth, \"data-max\": maxWidth, onMouseDown: (e) => this.onDividerDown(e), onTouchStart: (e) => this.onDividerDown(e), \"aria-hidden\": \"true\" }, h(\"div\", { class: `thead__divider-line` })))));\n    }))));\n  }\n  renderTableHeadNumberedCell() {\n    return (h(\"th\", { class: `thead__cell  thead__cell--numbered`, style: { width: this.numberColumnWidth + 'px' } }, h(\"span\", { class: \"scl-body\" }, \"#\")));\n  }\n  renderTableHeadSelectableCell() {\n    const style = {\n      width: this.selectionColumnWidth + 'px',\n    };\n    // Make selection and numbered cells closer than regular padding\n    if (this.numbered) {\n      style.paddingLeft = '0px';\n    }\n    return (h(\"th\", { class: `thead__cell thead__cell--selection`, style: style, title: \"Select\" }, h(\"scale-checkbox\", { ref: (el) => (this.elToggleSelectAll = el), onScaleChange: () => this.toggleSelectAll(), hideLabel: true, \"aria-label\": \"Select\" })));\n  }\n  renderTableBody() {\n    return (h(\"tbody\", { class: `tbody` }, (() => {\n      const rows = [];\n      // Pagination functionality\n      const total = this.rows.length;\n      const start = this.paginationStart;\n      const end = Math.min(total, this.paginationStart + this.pageSize);\n      for (let rowIndex = start; rowIndex < end; rowIndex++) {\n        const rowData = this.rows[rowIndex];\n        const rowNestedContent = [];\n        let isNestedExpanded = false;\n        rows.push(h(\"tr\", { class: `tbody__row` }, this.renderMobileTitle(rowData), this.numbered && this.renderTableBodyNumberedCell(rowIndex), this.selectable &&\n          this.renderTableBodySelectableCell(rowIndex), rowData.map((cellContent, columnIndex) => {\n          const field = this.fields[columnIndex];\n          const visible = field.visible !== undefined\n            ? field.visible\n            : CELL_TYPES[field.type].defaults.visible !== undefined\n              ? CELL_TYPES[field.type].defaults.visible\n              : CELL_DEFAULTS.visible;\n          if (!visible) {\n            return;\n          }\n          // Add rows nested tables to array\n          if (field.type === 'html') {\n            if (!!cellContent.isExpanded) {\n              isNestedExpanded = true;\n            }\n            rowNestedContent.push({\n              content: cellContent,\n            });\n          }\n          return this.renderTableCell(field, cellContent, rowIndex, columnIndex);\n        })));\n        // Add second row for nested content if any within the row are expanded\n        if (rowNestedContent.length) {\n          rows.push(h(\"div\", { class: `tbody__nested`, style: {\n              width: this.contentWidth + 'px',\n              display: isNestedExpanded ? 'block' : 'none',\n            } }, h(\"td\", { class: `tbody__nested-cell` }, rowNestedContent.map(({ content }) => {\n            return (h(\"div\", { ref: (el) => {\n                if (el) {\n                  // Remove content from other pages\n                  let child = el.lastElementChild;\n                  while (child) {\n                    el.removeChild(child);\n                    child = el.lastElementChild;\n                  }\n                  // Append actual content\n                  el.appendChild(content);\n                }\n              } }));\n          }))));\n        }\n      }\n      return rows;\n    })()));\n  }\n  renderMobileTitle(rowData) {\n    if (this.mobileTitleIndex === -1) {\n      return h(\"h5\", { class: `tbody__mobile-title scl-h5` }, \"\\u00A0\");\n    }\n    return (h(\"h5\", { class: `tbody__mobile-title scl-h5` }, rowData[this.mobileTitleIndex]));\n  }\n  renderTableBodyNumberedCell(rowIndex) {\n    return (h(\"td\", { class: `tbody__cell tbody__cell--numbered`, style: { width: this.numberColumnWidth + 'px' } }, h(\"p\", { class: \"scl-body\" }, rowIndex + 1)));\n  }\n  renderTableBodySelectableCell(rowIndex) {\n    const style = {\n      width: this.selectionColumnWidth + 'px',\n    };\n    if (this.numbered) {\n      style.marginLeft = '0px';\n      style.paddingLeft = '0px';\n    }\n    return (h(\"td\", { title: this.rows[rowIndex][0], class: `tbody__cell tbody__cell--selection`, style: style }, h(\"scale-checkbox\", { checked: this.rows[rowIndex].selected, onScaleChange: (e) => this.toggleRowSelect(e, rowIndex), hideLabel: true })));\n  }\n  renderTableCell(field, content, rowIndex, columnIndex) {\n    const cell = CELL_TYPES[field.type];\n    const { label, \n    // Use custom field, or default defined in class, or fallback default\n    width = cell.defaults.width || CELL_DEFAULTS.width, stretchWidth = 0, mobileTitle, // For text cells\n     } = field;\n    return (h(\"td\", { class: `tbody__cell${mobileTitle ? ` tbody__cell--used-as-mobile-title` : ``}`, style: { width: `calc(${width}px + ${stretchWidth}px)` } }, h(\"div\", { class: `tbody__mobile-label` }, label), cell.render({\n      field,\n      content,\n      component: this,\n      rowIndex,\n      columnIndex,\n    })));\n  }\n  renderTableInfo() {\n    return (h(\"div\", { class: `info` }, this.selectable && !!this.selection.length && (h(\"div\", { class: `info__selection` }, `${this.selection.length} row${this.selection.length > 1 ? 's' : ''} selected`)), this.isPagination && (h(\"scale-pagination\", { class: `info__pagination`, hideBorder: !this.isMobile, startElement: this.paginationStart, totalElements: this.rows.length, pageSize: this.pageSize, onScalePagination: ({ detail }) => (this.paginationStart = detail.startElement) }))));\n  }\n  /* 10. Render */\n  render() {\n    if (this.dataNeedsCheck) {\n      this.hasData = this.checkHasData();\n    }\n    return (h(Host, { style: {\n        display: this.visible ? 'block' : 'none',\n      } }, this.styles && h(\"style\", null, this.styles), h(\"div\", { class: this.getCssClassMap() }, h(\"div\", { class: `${name}__title-block` }, this.heading && (h(\"h4\", { class: `${name}__heading scl-h5` }, this.heading)), h(\"div\", null, h(\"slot\", null)), this.hasData && this.renderSettingsMenu()), this.hasData && this.renderTable(), this.hasData &&\n      !this.hideInfo &&\n      !this.needsAutoWidthParse &&\n      (this.selectable || this.isPagination) &&\n      this.renderTableInfo())));\n  }\n  get hostElement() { return getElement(this); }\n  static get watchers() { return {\n    \"fields\": [\"fieldsHandler\"],\n    \"rows\": [\"rowsHandler\"]\n  }; }\n};\nDataGrid.style = dataGridCss;\n\nexport { DataGrid as scale_data_grid };\n"],"names":["CheckboxCell","rows","columnIndex","field","content","component","rowIndex","style","editable","label","props","ev","value","h","DateCell","isAutoWidthCheck","EmailCell","emailNoProtocol","GraphCell","min","max","progress","LinkCell","urlNoProtocol","HTMLCell","NumberCell","precision","decimalSymbol","groupSymbol","prefix","suffix","step","detail","parts","SelectCell","options","option","TagsCell","tags","tag","TelephoneCell","telephoneNoProtocol","TextCell","variant","iconPrefix","iconSuffix","__rest","__name","s","e","t","p","i","ActionsCell","action","CELL_TYPES","DEFAULT_CELL_TYPE","CELL_DEFAULTS","dataGridCss","resizeObserver","name","DataGrid","hostRef","registerInstance","createEvent","event","menuItems","currentMenuItemsIndex","inactiveMenuItem","row","mobileTitle","sortable","classnames","maxLength","longestContent","length","target","selectAll","sortDirection","type","newSortDirection","a","b","textA","textB","width","diff","newWidth","adjustedDiff","index","visibilityToggle","menu","entries","entry","newIsMobile","container","containerWidth","targetContentWidth","total","visible","totalSetWeight","unsetColsCount","stretchWeight","remainderWeight","weight","isVisible","cell","data","emitEvent","scrollY","el","autoCols","resizable","minWidth","maxWidth","textAlign","stretchWidth","start","end","rowData","rowNestedContent","isNestedExpanded","cellContent","child","Host","getElement"],"mappings":"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"}