{"version":3,"file":"scale-toggle-group.entry.26ea9e76.js","sources":["../../node_modules/@telekom/scale-components/dist/esm/scale-toggle-group.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-3408babe.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { e as emitEvent } from './utils-004d7b05.js';\nimport { s as statusNote } from './status-note-0089e9c9.js';\n\nconst toggleGroupCss = \":host{--border-color:var(--telekom-color-ui-border-standard);--border-color-disabled:var(--telekom-color-ui-border-disabled);--border:var(--telekom-spacing-unit-x025) solid var(--border-color);--border-disabled:var(--telekom-spacing-unit-x025) solid\\n    var(--border-color-disabled);--radius:var(--telekom-radius-standard)}.toggle-group--inline{display:inline-flex}.toggle-group--block{display:flex}.toggle-group--block ::slotted(*){flex-grow:1}\";\n\nconst ToggleGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scaleChange = createEvent(this, \"scale-change\", 7);\n    this.scaleChangeLegacy = createEvent(this, \"scaleChange\", 7);\n    /** toggle button position within group */\n    this.position = 0;\n    /** number of slotted toggle-buttons */\n    this.slottedButtons = 0;\n    /** state */\n    this.status = [];\n    /** (optional) The size of the button */\n    this.size = 'regular';\n    /** (optional) Button Group background */\n    this.background = 'white';\n    /** (optional) 100% width */\n    this.fullWidth = false;\n    /** (optional) If `true`, the button is disabled */\n    this.disabled = false;\n    /** (optional) If `true`, the group has a border */\n    this.hideBorder = false;\n    /** (optional) more than one button selected possible */\n    this.singleSelect = false;\n    /** (optional) aria-label attribute needed for icon-only buttons */\n    this.ariaLabelTranslation = `toggle button group with $slottedButtons buttons`;\n    /** @deprecated - variant should replace colorScheme */\n    this.colorScheme = 'color';\n    /** (optional) background variant of a selected toggle-button */\n    this.variant = 'color';\n  }\n  scaleClickHandler(ev) {\n    let tempState;\n    if (this.singleSelect) {\n      if (!ev.detail.selected) {\n        tempState = this.status.map((obj) => ev.detail.id === obj.id ? ev.detail : Object.assign({}, obj));\n        /* clicked button has now selected state */\n      }\n      else {\n        tempState = this.status.map((obj) => ev.detail.id === obj.id ? ev.detail : Object.assign(Object.assign({}, obj), { selected: false }));\n      }\n    }\n    else {\n      tempState = this.status.map((obj) => ev.detail.id === obj.id ? ev.detail : Object.assign({}, obj));\n    }\n    this.setNewState(tempState);\n  }\n  handlePropsChange() {\n    this.propagatePropsToChildren();\n  }\n  componentDidLoad() {\n    const tempState = [];\n    const toggleButtons = this.getAllToggleButtons();\n    this.slottedButtons = toggleButtons.length;\n    toggleButtons.forEach((toggleButton) => {\n      this.position++;\n      tempState.push({\n        id: toggleButton.getAttribute('toggle-button-id'),\n        selected: toggleButton.hasAttribute('selected'),\n      });\n      toggleButton.setAttribute('position', this.position.toString());\n      toggleButton.setAttribute('aria-description-translation', '$position $selected');\n    });\n    this.propagatePropsToChildren();\n    this.position = 0;\n    this.status = tempState;\n  }\n  getAllToggleButtons() {\n    return Array.from(this.hostElement.querySelectorAll('scale-toggle-button'));\n  }\n  /**\n   * Keep props, needed in children buttons, in sync\n   */\n  propagatePropsToChildren() {\n    this.getAllToggleButtons().forEach((el) => {\n      el.setAttribute('size', this.size);\n      el.setAttribute('background', this.background);\n      el.setAttribute('disabled', this.disabled && 'disabled');\n      /** DEPRECATED */\n      // if attribute variant is set it overrides color-scheme\n      el.setAttribute('color-scheme', this.variant !== 'color' ? this.variant : this.colorScheme);\n      // if attribute color-scheme is set it overrides variant\n      el.setAttribute('variant', this.colorScheme !== 'color' ? this.colorScheme : this.variant);\n      el.setAttribute('hide-border', this.hideBorder ? 'true' : 'false');\n    });\n  }\n  getAriaLabelTranslation() {\n    const filledText = this.ariaLabelTranslation.replace(/\\$slottedButtons/g, `${this.slottedButtons}`);\n    return filledText;\n  }\n  componentDidRender() {\n    if (this.fullWidth) {\n      this.setButtonWidth();\n    }\n    this.setChildrenCorners();\n    if (this.colorScheme !== 'color') {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"colorScheme\" is deprecated. Please use the \"variant\" property!',\n        type: 'warn',\n        source: this.hostElement,\n      });\n    }\n  }\n  setNewState(tempState) {\n    const toggleButtons = Array.from(this.hostElement.querySelectorAll('scale-toggle-button'));\n    toggleButtons.forEach((button, i) => {\n      button.setAttribute('selected', tempState[i].selected ? 'true' : 'false');\n    });\n    this.status = tempState;\n    emitEvent(this, 'scaleChange', this.status);\n  }\n  setButtonWidth() {\n    Array.from(this.hostElement.children).forEach((child) => {\n      const button = child.shadowRoot.querySelector('button');\n      button.style.width = '100%';\n    });\n  }\n  setChildrenCorners() {\n    const children = Array.from(this.hostElement.children);\n    if (children.length === 1) {\n      // set four border radius when there is only one child\n      children[0].setAttribute('radius', 'all');\n    }\n    else {\n      for (let i = 0; i < children.length; i++) {\n        if (i === 0) {\n          children[i].setAttribute('radius', 'left');\n        }\n        if (i > 0 && i < children.length - 1) {\n          children[i].setAttribute('radius', 'neither');\n        }\n        if (i === children.length - 1) {\n          children[i].setAttribute('radius', 'right');\n        }\n      }\n    }\n  }\n  render() {\n    return (h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"div\", { class: this.getCssClassMap(), part: this.getBasePartMap(), \"aria-label\": this.getAriaLabelTranslation(), role: \"group\" }, h(\"slot\", null))));\n  }\n  getBasePartMap() {\n    return this.getCssOrBasePartMap('basePart');\n  }\n  getCssClassMap() {\n    return this.getCssOrBasePartMap('css');\n  }\n  getCssOrBasePartMap(mode) {\n    const prefix = mode === 'basePart' ? '' : 'toggle-group--';\n    return classnames('toggle-group', this.fullWidth && `${prefix}block`, !this.fullWidth && `${prefix}inline`, this.disabled && `${prefix}disabled`);\n  }\n  get hostElement() { return getElement(this); }\n  static get watchers() { return {\n    \"background\": [\"handlePropsChange\"],\n    \"disabled\": [\"handlePropsChange\"],\n    \"hideBorder\": [\"handlePropsChange\"],\n    \"size\": [\"handlePropsChange\"],\n    \"variant\": [\"handlePropsChange\"]\n  }; }\n};\nToggleGroup.style = toggleGroupCss;\n\nexport { ToggleGroup as scale_toggle_group };\n"],"names":["toggleGroupCss","ToggleGroup","__name","hostRef","registerInstance","createEvent","ev","tempState","obj","toggleButtons","toggleButton","el","statusNote","button","i","emitEvent","child","children","h","Host","mode","prefix","classnames","getElement"],"mappings":"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"}