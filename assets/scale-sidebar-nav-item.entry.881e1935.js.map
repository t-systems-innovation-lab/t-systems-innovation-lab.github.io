{"version":3,"file":"scale-sidebar-nav-item.entry.881e1935.js","sources":["../../node_modules/@telekom/scale-components/dist/esm/scale-sidebar-nav-item.entry.js"],"sourcesContent":["import { r as registerInstance, h, a as Host, g as getElement } from './index-3408babe.js';\nimport { c as classnames } from './index-713f92a5.js';\n\nconst sidebarNavItemCss = \":host{--border-bottom-color:var(--telekom-color-ui-faint);--border-left-color-third-nesting:var(--telekom-color-ui-strong);--color-active:var(--telekom-color-text-and-icon-primary-pressed);--color-hover:var(--telekom-color-text-and-icon-primary-hovered);--color-primary:var(--telekom-color-text-and-icon-primary-standard);--background-color-before-active:var(--color-primary);--font-weight-bold:var(--telekom-typography-font-weight-bold);--box-shadow-focus:inset 0 0 0 var(--telekom-line-weight-highlight)\\n    var(--telekom-color-functional-focus)}.sidebar-nav-item{border-bottom-style:solid;border-bottom-width:1px;border-bottom-color:var(--border-bottom-color)}.sidebar-nav-item--active{position:relative;color:var(--color-primary)}.sidebar-nav-item--active::before{content:'';display:block;position:absolute;top:0;left:var(--left-current-border, 0);width:0;height:100%;background-color:var(--background-color-before-active);border-left:2px solid transparent}.sidebar-nav-item--condensed.sidebar-nav-item--active::before{left:-1px}:host([nesting-level='1']) .sidebar-nav-item,.sidebar-nav-item--bold{font-weight:var(--font-weight-bold)}:host([nesting-level='3']) .sidebar-nav-item{border-left-color:var(--border-left-color-third-nesting);border-left-style:solid;border-left-width:0.0625rem}::slotted(a){color:currentColor;display:block;padding-top:1rem;padding-right:1rem;padding-bottom:1rem;padding-left:var(--spacing-indent);border-radius:var(--telekom-radius-small);text-decoration:none;outline:none}:host([nesting-level='2']) ::slotted(a){padding-left:calc(var(--spacing-indent) + 0.75rem)}::slotted(a:hover){color:var(--color-hover)}::slotted(a:focus){box-shadow:var(--box-shadow-focus)}::slotted(a:active){color:var(--color-active)}.sidebar-nav-item--condensed{border-bottom-width:0}.sidebar-nav-item--condensed ::slotted(a){padding-top:0.5rem;padding-left:0.75rem;padding-right:0.5rem;padding-bottom:0.5rem}\";\n\nconst SR_ACTIVE_TEXT = ' Zurzeit aktiv';\nconst isActive = (current) => {\n  try {\n    return !!JSON.parse(current);\n  }\n  catch (e) {\n    if (typeof current === 'string') {\n      return true;\n    }\n    return !!current;\n  }\n};\nconst getScreenReaderText = (current) => {\n  let text;\n  try {\n    text = JSON.parse(current);\n  }\n  catch (e) {\n    text = current;\n  }\n  return typeof text === 'string' && text.length > 0\n    ? ` ${text}`\n    : SR_ACTIVE_TEXT;\n};\nconst SidebarNavItem = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** Used normally for third level items, remove the bottom border */\n    this.condensed = false;\n    /** Bold text */\n    this.bold = false;\n    /** Text gets the active color */\n    this.active = false;\n    /**\n     * Mark the child link as \"current\" with `aria-current=page`.\n     * Provide the text hint if needed, default is: \"Zurzeit aktiv\"\n     */\n    this.current = null;\n  }\n  nestingLevelChanged(newValue) {\n    if (newValue === 1) {\n      this.bold = true;\n    }\n  }\n  currentChanged(newValue) {\n    this.handleAriaCurrentInSlottedA(newValue);\n    this.syncActiveToCurrent(newValue);\n  }\n  componentDidLoad() {\n    this.handleAriaCurrentInSlottedA(this.current);\n    if (this.current) {\n      this.syncActiveToCurrent(this.current);\n    }\n  }\n  /**\n   * If an item is `current`, it should be `active` as well\n   */\n  syncActiveToCurrent(newValue) {\n    this.active = isActive(newValue);\n  }\n  /**\n   * When `current` is set, this will:\n   * - set the aria-current=page attribute on the link\n   * - append a text-only hint for screen readers\n   * so we end up with something like this:\n   * <a href=\"...\" aria-current=\"page\">\n   *    Example<span style=\"...visible to SR only...\"> Active link</span>\n   * </a>\n   * @param current this.current\n   */\n  handleAriaCurrentInSlottedA(current) {\n    const a = this.el.querySelector('a');\n    if (this.srOnlyElement != null) {\n      a.removeChild(this.srOnlyElement);\n      this.srOnlyElement = null;\n    }\n    if (a != null) {\n      a.removeAttribute('aria-current');\n    }\n    if (isActive(current) && a != null) {\n      this.srOnlyElement = this.createScreenReaderOnlySpan();\n      a.appendChild(this.srOnlyElement);\n      a.setAttribute('aria-current', 'page');\n    }\n  }\n  createScreenReaderOnlySpan() {\n    const text = getScreenReaderText(this.current);\n    const span = document.createElement('span');\n    // .sr-only but inline\n    Object.assign(span.style, {\n      position: 'absolute',\n      left: '-10000px',\n      overflow: 'hidden',\n    });\n    span.textContent = text;\n    return span;\n  }\n  render() {\n    return (h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"li\", { part: this.getBasePartMap(), class: this.getCssClassMap(), role: \"listitem\" }, h(\"slot\", null))));\n  }\n  getBasePartMap() {\n    return this.getCssOrBasePartMap('basePart');\n  }\n  getCssClassMap() {\n    return this.getCssOrBasePartMap('css');\n  }\n  getCssOrBasePartMap(mode) {\n    const component = 'sidebar-nav-item';\n    const prefix = mode === 'basePart' ? '' : `${component}--`;\n    return classnames(component, this.bold && `${prefix}bold`, this.condensed && `${prefix}condensed`, this.active && `${prefix}active`);\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"nestingLevel\": [\"nestingLevelChanged\"],\n    \"current\": [\"currentChanged\"]\n  }; }\n};\nSidebarNavItem.style = sidebarNavItemCss;\n\nexport { SidebarNavItem as scale_sidebar_nav_item };\n"],"names":["sidebarNavItemCss","SR_ACTIVE_TEXT","isActive","__name","current","getScreenReaderText","text","SidebarNavItem","hostRef","registerInstance","newValue","a","span","h","Host","mode","component","prefix","classnames","getElement"],"mappings":"sWAGA,MAAMA,EAAoB;AAAA,o4CAEpBC,EAAiB,iBACjBC,EAAWC,EAACC,GAAY,CAC5B,GAAI,CACF,MAAO,CAAC,CAAC,KAAK,MAAMA,CAAO,CAC5B,MACD,CACE,OAAI,OAAOA,GAAY,SACd,GAEF,CAAC,CAACA,CACV,CACH,EAViB,YAWXC,EAAsBF,EAACC,GAAY,CACvC,IAAIE,EACJ,GAAI,CACFA,EAAO,KAAK,MAAMF,CAAO,CAC1B,MACD,CACEE,EAAOF,CACR,CACD,OAAO,OAAOE,GAAS,UAAYA,EAAK,OAAS,EAC7C,IAAIA,IACJL,CACN,EAX4B,uBAYtBM,EAAiBJ,EAAA,KAAM,CAC3B,YAAYK,EAAS,CACnBC,EAAiB,KAAMD,CAAO,EAE9B,KAAK,UAAY,GAEjB,KAAK,KAAO,GAEZ,KAAK,OAAS,GAKd,KAAK,QAAU,IAChB,CACD,oBAAoBE,EAAU,CACxBA,IAAa,IACf,KAAK,KAAO,GAEf,CACD,eAAeA,EAAU,CACvB,KAAK,4BAA4BA,CAAQ,EACzC,KAAK,oBAAoBA,CAAQ,CAClC,CACD,kBAAmB,CACjB,KAAK,4BAA4B,KAAK,OAAO,EACzC,KAAK,SACP,KAAK,oBAAoB,KAAK,OAAO,CAExC,CAID,oBAAoBA,EAAU,CAC5B,KAAK,OAASR,EAASQ,CAAQ,CAChC,CAWD,4BAA4BN,EAAS,CACnC,MAAMO,EAAI,KAAK,GAAG,cAAc,GAAG,EAC/B,KAAK,eAAiB,OACxBA,EAAE,YAAY,KAAK,aAAa,EAChC,KAAK,cAAgB,MAEnBA,GAAK,MACPA,EAAE,gBAAgB,cAAc,EAE9BT,EAASE,CAAO,GAAKO,GAAK,OAC5B,KAAK,cAAgB,KAAK,6BAC1BA,EAAE,YAAY,KAAK,aAAa,EAChCA,EAAE,aAAa,eAAgB,MAAM,EAExC,CACD,4BAA6B,CAC3B,MAAML,EAAOD,EAAoB,KAAK,OAAO,EACvCO,EAAO,SAAS,cAAc,MAAM,EAE1C,cAAO,OAAOA,EAAK,MAAO,CACxB,SAAU,WACV,KAAM,WACN,SAAU,QAChB,CAAK,EACDA,EAAK,YAAcN,EACZM,CACR,CACD,QAAS,CACP,OAAQC,EAAEC,EAAM,KAAM,KAAK,QAAUD,EAAE,QAAS,KAAM,KAAK,MAAM,EAAGA,EAAE,KAAM,CAAE,KAAM,KAAK,eAAgB,EAAE,MAAO,KAAK,eAAgB,EAAE,KAAM,UAAY,EAAEA,EAAE,OAAQ,IAAI,CAAC,CAAC,CAC9K,CACD,gBAAiB,CACf,OAAO,KAAK,oBAAoB,UAAU,CAC3C,CACD,gBAAiB,CACf,OAAO,KAAK,oBAAoB,KAAK,CACtC,CACD,oBAAoBE,EAAM,CACxB,MAAMC,EAAY,mBACZC,EAASF,IAAS,WAAa,GAAK,GAAGC,MAC7C,OAAOE,EAAWF,EAAW,KAAK,MAAQ,GAAGC,QAAc,KAAK,WAAa,GAAGA,aAAmB,KAAK,QAAU,GAAGA,SAAc,CACpI,CACD,IAAI,IAAK,CAAE,OAAOE,EAAW,IAAI,CAAI,CACrC,WAAW,UAAW,CAAE,MAAO,CAC7B,aAAgB,CAAC,qBAAqB,EACtC,QAAW,CAAC,gBAAgB,CAChC,CAAM,CACN,EA5FuB,kBA6FvBZ,EAAe,MAAQP"}