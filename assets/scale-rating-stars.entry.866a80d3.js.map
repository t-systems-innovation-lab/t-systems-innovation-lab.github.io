{"version":3,"file":"scale-rating-stars.entry.866a80d3.js","sources":["../../node_modules/@telekom/scale-components/dist/esm/scale-rating-stars.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-3408babe.js';\nimport { e as emitEvent } from './utils-004d7b05.js';\nimport { s as statusNote } from './status-note-0089e9c9.js';\n\nconst ratingStarsCss = \":host{--stars-color:var(--telekom-color-text-and-icon-primary-standard);--stars-hover-color:var(--telekom-color-text-and-icon-primary-hovered);--stars-active-color:var(--telekom-color-text-and-icon-primary-pressed);--stars-inactive-color:transparent;--stars-placeholder-color:var(--telekom-color-text-and-icon-standard);--stars-placeholder-revert-color:var(--telekom-color-ui-regular);--stars-disabled-color:var(--telekom-color-text-and-icon-disabled);--stars-spacing:var(--telekom-spacing-unit-x05);--stars-transition:color 0.1s;--stars-size:24px;--font-weight-medium:var(--telekom-typography-font-weight-medium);--font-size-small:var(--telekom-typography-font-size-small);--infotext-color:var(--telekom-color-text-and-icon-additional)}:host([star-size='small']){--stars-size:16px;font-size:var(--font-size-small)}[part='container']{display:inline-flex;flex-direction:column;position:relative}[part='range-slider']{position:absolute;border:0;margin:0;left:calc(-1 * var(--stars-size));bottom:0;z-index:2;width:calc(100% + var(--stars-size) * 2);opacity:0;height:var(--stars-size)}@media (hover: hover){[part='range-slider']{clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;white-space:nowrap;width:1px}}input[type='range']::-webkit-slider-thumb{-webkit-appearance:none;border:0;height:var(--stars-size);width:var(--stars-size);border-radius:50%;background:#ffffff;cursor:pointer;margin-left:0px;margin-top:0}[part='content']{display:flex}[part='wrapper']{display:inline-flex;border-radius:var(--telekom-spacing-unit-x1);margin-left:calc(-1 * var(--stars-spacing))}[part='wrapper']:hover [part='star'] [part='selected-star']{opacity:1}[part='star']>*{pointer-events:none}[part='label']{margin-bottom:var(--telekom-spacing-unit-x2);white-space:nowrap}[part='infotext']{margin-left:var(--telekom-spacing-unit-x2);display:flex;align-items:center;font-weight:var(--font-weight-medium);color:var(--infotext-color);white-space:nowrap}[part='star']{--decimal-width:100%;display:inline-flex;position:relative;color:var(--stars-color);cursor:pointer;padding:0 var(--stars-spacing)}[part='placeholder-star']{display:inline-flex;color:var(--stars-placeholder-color);transition:var(--stars-transition)}[part='selected-star']{color:var(--stars-inactive-color);margin-left:0px;position:relative;transition:var(--stars-transition)}.icon-clip{overflow:hidden;position:absolute;width:var(--decimal-width);height:100%}[part='star'][data-half]{--decimal-width:calc(50% - var(--stars-spacing))}[part='star'][data-selected]{--stars-placeholder-color:transparent}[part='star'][data-half]{--stars-placeholder-color:currentColor}[part='star'][data-selected] [part='selected-star']{color:var(--stars-color)}@media (hover: hover){[part='wrapper']:hover{--stars-color:var(--stars-hover-color);--stars-placeholder-color:transparent}[part='wrapper']:hover [part='star']{--decimal-width:100%}[part='wrapper']:hover [part='star'][data-half]{--stars-placeholder-color:transparent}[part='wrapper']:hover [part='selected-star']{color:var(--stars-color)}[part='star']:hover~[part='star'] [part='selected-star']{color:var(--stars-inactive-color)}[part='star']:hover~[part='star'] [part='placeholder-star']{--stars-placeholder-color:var(--telekom-color-text-and-icon-standard)}}[part='wrapper']:active{--stars-color:var(--stars-active-color)}:host(:focus-within) [part='wrapper'],[part='wrapper']:focus{box-shadow:0 0 0 var(--telekom-spacing-unit-x05)\\n    var(--telekom-color-functional-focus);outline:none}:host(.readonly) [part='wrapper']{--stars-placeholder-color:var(--stars-disabled-color);pointer-events:none}:host(.disabled) [part='label'],:host(.disabled) [part='infotext']{color:var(--stars-disabled-color)}:host(.disabled) [part='wrapper']{--stars-color:var(--stars-disabled-color);--stars-placeholder-color:var(--stars-disabled-color);pointer-events:none}:host(.hideLabel) [part='label']{visibility:hidden;height:0;margin-bottom:0}@media screen and (forced-colors: active), (-ms-high-contrast: active){[part='star'] [part='placeholder-star']{color:var(--telekom-color-text-and-icon-inverted-standard)}[part='star'][data-selected] [part='placeholder-star']{color:var(--stars-inactive-color)}[part='star']:hover~[part='star'] [part='placeholder-star']{color:var(--telekom-color-text-and-icon-inverted-standard)}[part='wrapper']:hover [part='placeholder-star']{color:var(--stars-inactive-color)}}\";\n\nconst sizes = {\n  small: 16,\n  large: 24,\n};\nlet ratingStarCount = 0;\nconst RatingStars = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scaleChange = createEvent(this, \"scale-change\", 7);\n    this.scaleChangeLegacy = createEvent(this, \"scaleChange\", 7);\n    this.ratingStarId = `scale-rating-star-${ratingStarCount++}`;\n    /** @deprecated; size should be used instead of starSize */\n    this.starSize = 'large';\n    /** size of the stars  */\n    this.size = 'large';\n    /** @deprecated; The lower limit of the rating */\n    this.minRating = 0;\n    /** @deprecated; max should be used instead of maxRating */\n    this.maxRating = 5;\n    /** The upper limit of the rating */\n    this.max = 5;\n    /** Represents the current value of the rating */\n    this.rating = 0;\n    /** makes the rating non-interactive (but still accessible)  */\n    this.readonly = false;\n    /** disables input  */\n    this.disabled = false;\n    /** a11y text for getting meaningful value. `$rating` and `$max` (deprecated `$maxRating`) are template variables and will be replaces by their corresponding properties.  */\n    this.ariaLabelTranslation = '$rating out of $max stars';\n    /** (optional) rating label */\n    this.label = 'Rating';\n    /** (optional) info text */\n    this.hideLabel = false;\n    this.handleInput = (ev) => {\n      const input = ev.composedPath()[0];\n      const value = Number(input.value);\n      switch (true) {\n        case value < this.minRating:\n          input.value = this.minRating.toString();\n          break;\n        case value > this.max:\n          input.value = this.max.toString();\n          break;\n      }\n      this.rating = Number(input.value);\n      emitEvent(this, 'scaleChange', { value: this.rating });\n    };\n    this.handleStarClick = (ev) => {\n      const star = ev.composedPath()[0];\n      const starValue = Number(star.dataset.value);\n      // set focus on input to make arrow keys work to select stars\n      const input = this.host.shadowRoot.querySelector('input');\n      input.focus();\n      if (starValue === 1 && this.rating === 1 && this.minRating === 0) {\n        this.rating = this.minRating;\n      }\n      else {\n        this.rating = starValue;\n      }\n      emitEvent(this, 'scaleChange', { value: this.rating });\n    };\n  }\n  componentWillRender() {\n    // make sure the deprecated props overwrite the actual ones if used\n    // and show status note deprecated\n    if (this.maxRating !== 5) {\n      this.max = this.maxRating;\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"maxRating\" is deprecated. Please use the \"max\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n    if (this.minRating !== 0) {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"minRating\" is deprecated and will be deleted upon the next release',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n    if (this.starSize !== 'large') {\n      this.size = this.starSize;\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"starSize\" is deprecated. Please use the \"size\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n    // deactivate showing half stars while keeping the code\n    this.rating = Math.round(this.rating);\n  }\n  // constructs the aria message for the current rating\n  getRatingText() {\n    const filledText = this.ariaLabelTranslation\n      .replace(/\\$rating/g, `${this.rating}`)\n      // TODO: remove when `maxRating` is also being removed\n      .replace(/\\$maxRating/g, `${this.max}`)\n      .replace(/\\$max/g, `${this.max}`);\n    return filledText;\n  }\n  renderStar(index, selected = false, rating) {\n    const size = sizes[this.size];\n    const isWholeNumber = rating % 1 === 0;\n    const isLastNumber = Math.ceil(rating) === index;\n    return (h(\"div\", { part: \"star\", \"data-value\": index, \"data-selected\": selected, \"data-half\": isLastNumber && !isWholeNumber, onMouseUp: !this.readonly && this.handleStarClick,\n      // sets up first star to be the resetter above the input element\n      style: { zIndex: index === 1 ? '5' : 'auto' } }, h(\"scale-icon-action-favorite\", { size: size, part: \"placeholder-star\" }), h(\"div\", { class: \"icon-clip\" }, h(\"scale-icon-action-favorite\", { size: size, selected: true, part: \"selected-star\" }))));\n  }\n  renderRating() {\n    const stars = [];\n    const roundedRating = Math.ceil(this.rating);\n    const max = this.max;\n    for (let index = 1; index <= max; index++) {\n      const isSelected = roundedRating >= index;\n      stars.push(this.renderStar(index, isSelected, this.rating));\n    }\n    return stars;\n  }\n  render() {\n    return (h(Host, { class: {\n        hideLabel: this.hideLabel,\n        disabled: this.disabled,\n        readonly: this.readonly,\n      } }, h(\"div\", { part: \"container\" }, h(\"label\", { id: `${this.ratingStarId}-label`, part: \"label\", htmlFor: this.ratingStarId }, this.label), h(\"div\", { part: \"content\" }, h(\"div\", { part: \"wrapper\", \"aria-valuetext\": this.getRatingText(), \"aria-orientation\": \"horizontal\", \"aria-describedby\": this.infoText ? `${this.ratingStarId}-infotext` : false }, h(\"input\", { disabled: this.disabled, readonly: this.readonly, part: \"range-slider\", type: this.readonly ? 'number' : 'range', id: this.ratingStarId, min: 0, max: this.max + 1, value: this.rating, step: \"1\", \"aria-labelledby\": `${this.ratingStarId}-label`, \"aria-readonly\": this.readonly ? 'true' : false, \"aria-valuemin\": this.minRating, \"aria-valuemax\": this.max, \"aria-valuenow\": this.rating, \"aria-valuetext\": this.getRatingText(), onInput: !this.readonly && this.handleInput }), this.renderRating()), this.infoText && (h(\"div\", { part: \"infotext\", id: `${this.ratingStarId}-infotext` }, this.infoText))))));\n  }\n  get host() { return getElement(this); }\n};\nRatingStars.style = ratingStarsCss;\n\nexport { RatingStars as scale_rating_stars };\n"],"names":["ratingStarsCss","sizes","ratingStarCount","RatingStars","__name","hostRef","registerInstance","createEvent","ev","input","value","emitEvent","star","starValue","statusNote","index","selected","rating","size","isWholeNumber","isLastNumber","h","stars","roundedRating","max","isSelected","Host","getElement"],"mappings":"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"}