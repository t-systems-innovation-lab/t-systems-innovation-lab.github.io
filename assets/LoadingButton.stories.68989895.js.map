{"version":3,"file":"LoadingButton.stories.68989895.js","sources":["../../src/components/LoadingButton.vue"],"sourcesContent":["<template>\n    <scale-button\n        :variant=\"variant\"\n        :class=\"fullWidth ? 'fullWidth' : ''\"\n        :size=\"size\"\n        :disabled=\"disabled || loading\"\n        @click=\"onClick\"\n        :iconOnly=\"iconOnly\"\n    >\n        <slot v-if=\"!loading\">Speichern</slot>\n        <scale-loading-spinner\n            :text=\"iconOnly ? '' : 'Laden...'\"\n            v-if=\"loading\"\n            :variant=\"loadingTextVariant\"\n        ></scale-loading-spinner>\n    </scale-button>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, defineProps, defineEmits, withDefaults, computed } from 'vue'\n\ninterface Props {\n    loading?: boolean\n    size?: 'small' | 'large'\n    fullWidth?: boolean\n    disabled?: boolean\n    iconOnly?: boolean\n    variant?: 'primary' | 'secondary' | 'ghost'\n}\n\nconst emit = defineEmits(['click'])\nconst props = withDefaults(defineProps<Props>(), {\n    variant: 'primary',\n    size: 'large',\n    fullWidth: true,\n})\n\nconst { loading, fullWidth, size, variant, disabled, iconOnly } = toRefs(props)\n\nconst loadingTextVariant = computed(() => (variant.value === 'primary' ? 'white' : 'primary'))\n\nconst onClick = (e: Event) => {\n    e.preventDefault()\n    e.stopPropagation()\n    emit('click')\n}\n</script>\n\n<style src=\"../../node_modules/@telekom/scale-components/dist/scale-components/scale-components.css\">\n</style>\n"],"names":["loading","fullWidth","size","variant","disabled","iconOnly","toRefs","props","loadingTextVariant","computed","onClick","__name","e","emit"],"mappings":"kcAqCM,CAAE,QAAAA,EAAS,UAAAC,EAAW,KAAAC,EAAM,QAAAC,EAAS,SAAAC,EAAU,SAAAC,CAAa,EAAAC,EAAOC,CAAK,EAExEC,EAAqBC,EAAS,IAAON,EAAQ,QAAU,UAAY,QAAU,SAAU,EAEvFO,EAAUC,EAACC,GAAa,CAC1BA,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClBC,EAAK,OAAO,CAAA,EAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}